#
# Chinese JavaScript messages file.
# Translated by SuperMonster003 as of Jul 12, 2022.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This is replaced during jar assembly from property string
# and should not be translated
implementation.version = @IMPLEMENTATION.VERSION@

#
# To add JavaScript error messages for a particular locale, create a
# new Messages_[locale].properties file, where [locale] is the Java
# string abbreviation for that locale.  For example, JavaScript
# messages for the Polish locale should be located in
# Messages_pl.properties, and messages for the Italian Swiss locale
# should be located in Messages_it_CH.properties.  Message properties
# files should be accessible through the classpath under
# org.mozilla.javascript.resources
#
# See:
# java.util.ResourceBundle
# java.text.MessageFormat
#

# SomeJavaClassWhereUsed

params.omit.non.js.object.warning = true

msg.non.js.object.warning = \
    缺少 Context.javaToJS() 转换: Rhino 运行时检测到类 "{1}" 的对象 "{0}", 此对象需为 String / Number / Boolean / Scriptable 类型. 请检查代码是否缺少 Context.javaToJS() 调用.

# Codegen

msg.dup.parms = \
    重复的参数名: "{0}".

msg.too.big.jump = \
    程序过于庞杂: 跳转偏移量过大.

msg.too.big.index = \
    程序过于庞杂: 内部索引已超过 64 KB 大小限制.

msg.while.compiling.fn = \
    编译函数 "{0}" 时遇到代码生成错误: {1}.

msg.while.compiling.script = \
    编译脚本 "{0}" 时遇到代码生成错误.

# Context

msg.ctor.not.found = \
    未找到 "{0}" 的构造器.

msg.not.ctor = \
    "{0}" 无法用作构造器.

# FunctionObject

msg.varargs.ctor = \
    定义可变长参数构造器 "{0}" 时需符合以下静态签名: \
    "(Context cx, Object[] args, Function ctorObj, boolean inNewExpr)".

msg.varargs.fun = \
    定义可变长参数函数 "{0}" 时需符合以下静态签名: \
    "(Context cx, Scriptable thisObj, Object[] args, Function funObj)".

msg.incompat.call = \
    方法 "{0}" 调用失败: 不兼容的目标对象.

msg.incompat.call.details = \
    方法 "{0}" 调用失败: {1} 非 {2} 的实例.

msg.bad.parms = \
    方法 "{1}" 包含不支持的参数类型 "{0}".

msg.bad.method.return = \
    方法 "{1}" 不支持返回值类型 "{0}".

msg.bad.ctor.return = \
    不支持的构造器返回值类型: "{0}".

msg.no.overload = \
    类 "{1}" 出现多次相同的方法 "{0}".

msg.method.not.found = \
    无法在 "{1}" 中找到方法 "{0}".

msg.method.missing.parameter = \
    {0}: 参数数量为 {2} (不应少于 {1}).

# IRFactory

msg.bad.for.in.lhs = \
    无效的左侧 for...in 循环语句.

msg.mult.index = \
    只能在 for...in 循环语句中声明一个变量.

msg.bad.for.in.destruct = \
    左侧 for...in 循环的数组参数需满足长度为 2 的键值对.

msg.bad.computed.property.in.destruct = \
    解构赋值时出现不支持的计算属性.

msg.cant.convert = \
    无法转换为 "{0}" 类型.

msg.bad.assign.left = \
    无效的左侧赋值语句.

msg.bad.decr = \
    无效的自减操作.

msg.bad.incr = \
    无效的自增操作.

msg.bad.yield = \
    yield 必须在函数内部.

msg.yield.parenthesized = \
    yield 表达式必须在圆括号内.

msg.nullish.bad.token = \
    语法错误: 非预期标记 (unexpected token).

# NativeGlobal

msg.cant.call.indirect = \
    函数 "{0}" 需直接调用, 而非间接调用于其他别名函数.

msg.eval.nonstring = \
    调用 eval() 传入非字符串类型值将直接将其返回. 这通常不在预期之内.

msg.eval.nonstring.strict = \
    严格模式下调用 eval() 传入非字符串类型值将不被允许.

msg.bad.destruct.op = \
    无效的解构赋值运算符.

# NativeCall

msg.only.from.new = \
    构造器 "{0}" 需要 "new" 表达式调用.

msg.deprec.ctor = \
    构造器 "{0}" 已弃用.

# NativeFunction

msg.no.function.ref.found = \
    因无法找到源码, 无法反编译名为 {0} 的函数引用.

msg.arg.isnt.array = \
    Function.prototype.apply 第二个参数需为数组类型.

# NativeGlobal

msg.bad.esc.mask = \
    无效的 escape 掩码 (参阅 HTEscape.c).

# NativeJavaClass

msg.cant.instantiate = \
    无法实例化 ({0}): 类 {1} 为接口或抽象类.

msg.bad.ctor.sig = \
    构造器签名错误: {0} 调用 {1}, 其签名为 {2}.

msg.not.java.obj = \
    方法 getClass() 参数需为 Java 对象.

msg.no.java.ctor = \
    Java 构造方法不存在: {0}({1}).

# NativeJavaMethod

msg.method.ambiguous = \
    Java 方法 {0}.{1} 匹配 JavaScript 参数类型 ({2}) 不具备唯一性; \
    候选方法: {3}.

msg.constructor.ambiguous = \
    Java 构造器 {0} 匹配 JavaScript 参数类型 ({1}) 不具备唯一性; \
    候选构造器: {2}.

# NativeJavaObject

msg.conversion.not.allowed = \
    无法将 {0} 转换为 {1}.

msg.no.empty.interface.conversion = \
    JavaScript 函数无法转换为不含任何方法的 Java 接口 "{0}".

msg.no.function.interface.conversion = \
    JavaScript 函数无法转换为包含不同名称方法的 Java 接口 "{0}".

msg.undefined.function.interface = \
    属性 "{0}" 在接口适配器中未定义.

msg.not.function.interface = \
    属性 "{0}" 在接口适配器中非 function 类型.

# NativeJavaPackage

msg.not.classloader = \
    构造器 "Packages" 需传入 java.lang.Classloader 类型参数.

# NativeRegExp

msg.bad.quant = \
    无效的正则表达式量词 "{0}".

msg.overlarge.backref = \
    反向引用 {0} 超限.

msg.overlarge.min = \
    正则表达式最小值 {0} 超限.

msg.overlarge.max = \
    正则表达式最大值 {0} 超限.

msg.zero.quant = \
    量词 {0} 为 0.

msg.max.lt.min = \
    正则表达式最大值 {0} 小于最小值.

msg.unterm.quant = \
    正则表达式量词 {0} 缺少末端匹配.

msg.unterm.paren = \
    正则表达式括号 {0} 缺少末端匹配.

msg.unterm.class = \
    正则表达式字符组 {0} 缺少末端匹配.

msg.bad.range = \
    正则表达式字符组中包含无效范围.

msg.trail.backslash = \
    正则表达式包括尾字符 "\\".

msg.re.unmatched.right.paren = \
    正则表达式包含无法匹配的括号 ")".

msg.no.regexp = \
    无效的正则表达式.

msg.bad.backref = \
    正则表达式反向引用捕获组数超限.

msg.bad.regexp.compile = \
    RegExp.prototype.compile 首个参数为 RegExp 类型时不接受其他额外参数.

msg.arg.not.object = \
    参数类型 "{0}" 与预期类型 "object" 不一致.

msg.str.match.all.no.global.flag = \
    String.prototype.matchAll 调用时传入的正则表达式参数需携带全局匹配标志 (g).

# NativeDate

msg.invalid.date = \
    无效的 Date.

msg.toisostring.must.return.primitive = \
    方法 toISOString 的返回值 "{0}" 必须为基本类型.

msg.invalid.toprimitive.hint = \
    [Symbol.toPrimitive]: 预期值为 "string" / "number" / "default", 而非 "{0}".

# NativeJSON

msg.json.cant.serialize = \
    无法序列化 {0}.

# Parser

msg.got.syntax.errors = \
    编译共出现 {0} 个语法错误.

msg.var.redecl = \
    类型错误: 变量 {0} 重复声明 (已存在 "var {0}").

msg.const.redecl = \
    类型错误: 变量 {0} 重复声明 (已存在 "const {0}").

msg.let.redecl = \
    类型错误: 变量 {0} 重复声明 (已存在 "let {0}").

msg.parm.redecl = \
    类型错误: 形参 {0} 重复声明.

msg.fn.redecl = \
    类型错误: 函数 {0} 重复声明.

msg.let.decl.not.in.block = \
    语法错误: let 未直接声明在块级作用域中.

msg.bad.object.init = \
    语法错误: 无效的对象初始化语句.

# NodeTransformer

msg.dup.label = \
    重复的标签.

msg.undef.label = \
    未定义的标签 (undefined).

msg.bad.break = \
    未标签化的 break 语句必须包含在循环语句或 switch 语句中.

msg.continue.outside = \
    continue 语句必须包含在循环语句中.

msg.continue.nonloop = \
    迭代语句中的 continue 语句需使用标签.

msg.bad.throw.eol = \
    throw 关键字与表达式之间存在换行.

msg.no.paren.parms = \
    函数参数前缺少 "(".

msg.no.parm = \
    缺少形参.

msg.no.paren.after.parms = \
    形参后缺少 ")".

msg.parm.after.rest = \
    剩余参数之后不可存在其他参数.

msg.no.brace.body = \
    函数体前缺少 "{".

msg.no.brace.after.body = \
    函数体后缺少 "}".

msg.no.paren.cond = \
    条件表达式前缺少 "(".

msg.no.paren.after.cond = \
    条件表达式前缺少 ")".

msg.no.semi.stmt = \
    语句前缺少 ";".

msg.missing.semi = \
    语句后缺少 ";".

msg.no.name.after.dot = \
    操作符 "." 后缺少成员名称.

msg.no.name.after.coloncolon = \
    操作符 "::" 后缺少成员名称.

msg.no.name.after.dotdot = \
    操作符 ".." 后缺少成员名称.

msg.no.name.after.xmlAttr = \
    XML 属性 ".@" 后缺少成员名称.

msg.no.bracket.index = \
    索引表达式缺少 "]".

msg.no.paren.switch = \
    switch 表达式缺少 "(".

msg.no.paren.after.switch = \
    switch 表达式缺少 ")".

msg.no.brace.switch = \
    switch 表达式缺少 "{".

msg.bad.switch = \
    无效的 switch 语句.

msg.no.colon.case = \
    case 表达式缺少 ":".

msg.double.switch.default = \
    switch 语句包含多个 default 标签.

msg.no.while.do = \
    do...while 循环缺少 while 表达式.

msg.no.paren.for = \
    for 循环缺少 "(".

msg.no.semi.for = \
    for 循环初始化语句缺少 ";".

msg.no.semi.for.cond = \
    for 循环条件语句缺少 ";".

msg.in.after.for.name = \
    for 循环语句缺少 "in".

msg.no.paren.for.ctrl = \
    for 循环控制语句缺少 ")".

msg.no.paren.with = \
    with 声明对象前缺少 "(".

msg.no.paren.after.with = \
    with 声明对象后缺少 ")".

msg.no.with.strict = \
    无法在严格模式下使用 with 语句.

msg.no.paren.after.let = \
    let 后缺少 "(".

msg.no.paren.let = \
    变量列表后缺少 ")".

msg.no.curly.let = \
    let 后缺少 "}".

msg.bad.return = \
    无效的 return 语句.

msg.no.brace.block = \
    复合语句缺少 "}".

msg.bad.label = \
    无效的标签.

msg.bad.var = \
    缺少变量名称.

msg.bad.var.init = \
    无效的变量初始化.

msg.no.colon.cond = \
    条件表达式缺少 ":".

msg.no.paren.arg = \
    参数列表缺少 ")".

msg.no.bracket.arg = \
    元素列表缺少 "]".

msg.bad.prop = \
    无效的对象属性.

msg.no.colon.prop = \
    对象属性后缺少 ":".

msg.no.brace.prop = \
    对象属性列表后缺少 "}".

msg.no.paren = \
    括号匹配缺少 ")".

msg.reserved.id = \
    标志符使用了保留关键字: {0}.

msg.super.shorthand.function = \
    super 应在简写函数 (shorthand function) 中使用.

msg.optional.super = \
    super 不可出现在可选链表达式中.

msg.super.delete = \
    无法删除 super 的属性.

msg.no.paren.catch = \
    catch 代码块前缺少 "(".

msg.bad.catchcond = \
    catch 代码块条件无效.

msg.catch.unreachable = \
    所有 catch 条件从句均不可达.

msg.no.brace.try = \
    try 代码块前缺少 "{".

msg.no.brace.catchblock = \
    catch 代码块前缺少 "{".

msg.try.no.catchfinally = \
    "try" 语句缺少 "catch" 或 "finally" 代码块.

msg.no.return.value = \
    函数 {0} 可能没有返回值.

msg.anon.no.return.value = \
    匿名函数可能没有返回值.

msg.return.inconsistent = \
    return 语句不满足前后调用一致性.

msg.generator.returns = \
    类型错误: 构造器函数 {0} 不应有返回值.

msg.anon.generator.returns = \
    类型错误: 匿名构造器函数不应有返回值.

msg.syntax.invalid.assignment.lhs = \
    语法错误: 赋值表达式的左侧无效.

msg.syntax = \
    语法错误.

msg.unexpected.eof = \
    异常的文件结尾 (EOF).

msg.XML.bad.form = \
    不合法的 XML 语法结构.

msg.XML.not.available = \
    无效的 XML 运行时.

msg.too.deep.parser.recursion = \
    无法解析过多的递归层次.

msg.too.many.constructor.args = \
    过多的构造器参数数量.

msg.too.many.function.args = \
    过多的函数参数数量.

msg.no.side.effects = \
    代码需产生副作用.

msg.extra.trailing.semi = \
    非必要的尾分号.

msg.extra.trailing.comma = \
    ECMA-262 对象初始化时不支持尾逗号.

msg.trailing.array.comma = \
    数组字面量中尾逗号在不同浏览器中表现不同.

msg.equal.as.assign = \
    是否将判断语句 "==" 误用作赋值语句 "=".

msg.var.hides.arg = \
    变量 {0} 出现了实参遮蔽.

msg.destruct.assign.no.init = \
    解构赋值缺少 "=".

msg.default.args = \
    默认值的使用需版本不低于 200.

msg.destruct.default.vals = \
    解构赋值不支持使用默认值.

msg.no.old.octal.strict = \
    严格模式下禁止使用传统八进制数字.

msg.no.old.octal.bigint = \
    BigInt 不支持传统八进制数字.

msg.dup.obj.lit.prop.strict = \
    属性 "{0}" 在对象字面量中已被声明.

msg.dup.param.strict = \
    参数 "{0}" 在函数中已被声明.

msg.bad.id.strict = \
    "{0}" 在严格模式下无法作为合法标识符使用.

msg.no.unary.expr.on.left.exp = \
    "{0}" 不可出现在 "**" 操作符左侧.

# ScriptRuntime

# is there a better message for this?
# it's currently only used as a poison pill for caller, caller and arguments properties
msg.op.not.allowed = \
    操作不被允许.

msg.no.properties = \
    {0} 无任何属性.

msg.invalid.iterator = \
    无效迭代器.

msg.iterator.primitive = \
    __iterator__ 不可返回原始类型数据.

msg.not.iterable = \
    {0} 不可迭代.

msg.invalid.for.each = \
    无效的 for...each 循环.

msg.assn.create.strict = \
    无法赋值于未声明的变量 {0}.

msg.ref.undefined.prop = \
    无法引用未定义的属性 {0}.

msg.prop.not.found = \
    属性 {0} 不存在.

msg.set.prop.no.setter = \
    仅有 getter 而无 setter 的属性 "{0}" 无法被赋值为 "{1}".

msg.invalid.type = \
    JavaScript 的 {0} 类型值无效.

msg.primitive.expected = \
    {0} 需为原始类型值.

msg.namespace.expected = \
    在 "::" 左侧出现的 {0} 需为命名空间对象.

msg.null.to.object = \
    无法将 null 转换为对象.

msg.undef.to.object = \
    无法将 undefined 转换为对象.

msg.cant.convert.to.bigint = \
    无法将 {0} 转换为 BigInt.

msg.cant.convert.to.bigint.isnt.integer = \
    无法将非整数的 {0} 转换为 BigInt.

msg.bigint.bad.form = \
    不合法的 BigInt 语法形式.

msg.cyclic.value = \
    Cyclic 类型值 {0} 不被支持.

msg.is.not.defined = \
    "{0}" 未定义.

msg.undef.prop.read = \
    无法读取 {0} 的属性值 "{1}".

msg.undef.prop.write = \
    无法将 {0} 的属性值 "{1}" 设置为 "{2}".

msg.undef.prop.delete = \
    无法删除 {0} 的属性值 "{1}".

msg.undef.method.call = \
    无法调用 {0} 的方法 "{1}".

msg.undef.with = \
    "with" 语句无法应用于 {0}.

msg.isnt.function = \
    {0} 是 {1} 而非函数.

msg.isnt.function.in = \
    对象 {1} 属性 {0} 的类型 "{2}" 非可调用的函数类型.

msg.function.not.found = \
    无法找到函数 {0}.

msg.function.not.found.in = \
    对象 {1} 不存在方法 {0}.

msg.isnt.xml.object = \
    {0} 非 XML 对象.

msg.no.ref.to.get = \
    {0} 非引用类型, 无法读取引用值.

msg.no.ref.to.set = \
    {0} 非引用类型, 无法设置引用值为 {1}.

msg.no.ref.from.function = \
    函数 {0} 不可在赋值语句左侧使用, 也不可用作 "++" 或 "--" 操作符的操作数.

msg.bad.default.value = \
    Object.getDefaultValue() 不可返回对象.

msg.instanceof.not.object = \
    不可在非对象上使用 "instanceof".

msg.instanceof.bad.prototype = \
    {0} 的 "prototype" 属性非对象.

msg.in.not.object = \
    不可在非对象上使用 "in".

msg.bad.radix = \
    不合法的基数 {0}.

msg.division.zero = \
    0 被用作除数.

msg.bigint.negative.exponent = \
    BigInt 使用了负指数.

msg.bigint.out.of.range.arithmetic = \
    BigInt 过大.

msg.cant.convert.to.primitive = \
    无法将对象转换为原始类型值.

# ScriptableObject

msg.default.value = \
    无法找到对象的默认值.

msg.zero.arg.ctor = \
    无法读取不存在无参构造函数的类 "{0}".

duplicate.defineClass.name = \
    无效的方法 "{0}": 名称 "{1}" 已被占用.

msg.ctor.multiple.parms = \
    无法定义类 {0}, 多参构造器数量超过一个.

msg.extend.scriptable = \
    {0} 必须继承 ScriptableObject 才能定义属性 {1}.

msg.bad.getter.parms = \
    如需定义属性, getter {0} 需满足无参条件或单一 ScriptableObject 参数条件.

msg.obj.getter.parms = \
    Getter {0} 需为静态或委托类型才能接受 ScriptableObject 参数.

msg.getter.static = \
    Getter 与 setter 需保持静态一致性.

msg.setter.return = \
    Setter 返回值类型 {0} 只能为 void.

msg.setter2.parms = \
    双参数 setter 必须将 ScriptableObject 作为第一参数.

msg.setter1.parms = \
    {0} 必须为单参数 setter.

msg.setter2.expected = \
    {0} 必须为静态或委托类型才能接受双参数.

msg.setter.parms = \
    Setter 只接受一个或两个参数.

msg.setter.bad.type = \
    Setter {1} 包含不支持的参数类型 "{0}".

msg.add.sealed = \
    对象 {0} 已密封, 无法添加属性.

msg.remove.sealed = \
    对象 {0} 已密封, 无法删除属性.

msg.modify.sealed = \
    对象 {0} 已密封, 无法修改属性值.

msg.modify.readonly = \
    无法修改只读属性: {0}.

msg.both.data.and.accessor.desc = \
    数据描述符与存取描述符不可共存.

msg.change.configurable.false.to.true = \
    无法将 "{0}" 的 configurable 属性由 false 修改为 true.

msg.change.enumerable.with.configurable.false = \
    无法修改 enumerable 属性 (因 configurable 为 false).

msg.change.writable.false.to.true.with.configurable.false = \
    无法将 "{0}" 的 writable 属性由 false 修改为 true (因 configurable 为 false).

msg.change.value.with.writable.false = \
    无法修改 "{0}" 的 value 属性 (因 writable 为 false).

msg.change.getter.with.configurable.false = \
    无法修改 "{0}" 的 get 属性 (因 configurable 为 false).

msg.change.setter.with.configurable.false = \
    无法修改 "{0}" 的 set 属性 (因 configurable 为 false).

msg.change.property.data.to.accessor.with.configurable.false = \
    无法将 "{0}" 由数据属性修改为访问器属性 (因 configurable 为 false).

msg.change.property.accessor.to.data.with.configurable.false = \
    无法将 "{0}" 由访问器属性修改为数据属性 (因 configurable 为 false).

msg.not.extensible = \
    无法向对象添加属性 (因 extensible 为 false).

msg.delete.property.with.configurable.false = \
    无法删除 "{0}" 属性 (因 configurable 为 false).

# TokenStream

msg.missing.exponent = \
    缺少指数.

msg.caught.nfe = \
    无效的数字格式.

msg.unterminated.string.lit = \
    未结束的字符串字面量.

msg.unterminated.comment = \
    未结束的注释.

msg.unterminated.re.lit = \
    未结束的正则表达式字面量.

msg.invalid.re.flag = \
    无效的正则表达式标志 "{0}".

msg.no.re.input.for = \
    {0} 缺少输入.

msg.illegal.character = \
    无效字符: {0}.

msg.invalid.escape = \
    无效的 Unicode 转义序列.

msg.bad.namespace = \
    默认命名空间声明语法无效. \
    有效语法: "default xml namespace = EXPRESSION;".

# TokensStream warnings

msg.bad.octal.literal = \
    不合法的八进制字面量数字 {0}; 将其解释为十进制数字.

msg.reserved.keyword = \
    未来保留关键字 {0} 使用不合法; 将其解释为普通标识符.

# LiveConnect errors

msg.java.internal.field.type = \
    内部错误: 无法在 {2} 完成 {1} 到 {0} 的类型转换.

msg.java.conversion.implicit_method = \
    无法在类 {1} 中找到转换方法 "{0}".

msg.java.method.assign = \
    Java 方法 "{0}" 无法被赋值.

msg.java.internal.private = \
    内部错误: 因 "{0}" 为私有字段或受保护字段而无法访问.

msg.java.no_such_method = \
    找不到方法 {0}.

msg.script.is.not.constructor = \
    "Script" 对象需为构造器.

msg.nonjava.method = \
    {1} 作为 Java 方法 "{0}" 的 "this" 值时, 无法转换为 Java 类型 {2}.

msg.java.member.not.found = \
    Java 类 "{0}" 不存在名为 "{1}" 的公有访问字段或方法.

msg.java.array.index.out.of.bounds = \
    数组索引 {0} 越界: [0..{1}].

msg.java.array.member.not.found = \
    Java 数组不存在名为 "{0}" 的公有访问字段或方法.

msg.pkg.int = \
    可能意外传入了数字类型作为 Java 包名.

msg.access.prohibited = \
    访问 Java 类 "{0}" 被禁止.

# ImporterTopLevel

msg.ambig.import = \
    导入歧义: "{0}" 和 "{1}".

msg.not.pkg = \
    importPackage 需传入 "包" 参数, 而非 "{0}".

msg.not.class = \
    importClass 需传入 "类" 参数, 而非 "{0}".

msg.not.class.not.pkg = \
    "{0}" 非类名或包名.

msg.prop.defined = \
    无法导入 "{0}", 因同名属性已被定义.

# JavaAdapter

msg.adapter.zero.args = \
    JavaAdapter 需至少一个参数.

msg.not.java.class.arg = \
    参数 {0} 非 Java 类 {1}.

msg.only.one.super = \
    无法继承 {0} 和 {1}, 因 JavaAdapter 只能继承一个类.

# Arrays

msg.arraylength.bad = \
    数组长度不恰当.

msg.arraylength.too.big = \
    数组长度 {0} 超出支持的容量上限.

msg.empty.array.reduce = \
    空数组的 reduce 方法需传入初始值参数.

# URI

msg.bad.uri = \
    URI 序列格式不正确.

# Number

msg.bad.precision = \
    精度 {0} 超出范围.

# NativeGenerator

msg.send.newborn = \
    尝试发送数据到新生生成器.

msg.already.exec.gen = \
    生成器已执行.

msg.StopIteration.invalid = \
    StopIteration 不可被修改为其他对象.

msg.generator.executing = \
    生成器仍处于在上一次调用的执行状态.

# Interpreter

msg.yield.closing = \
    无法在已关闭的生成器中使用 yield.

msg.called.null.or.undefined = \
    在 null 或 undefined 上调用了 {0}.prototype.{1} 方法.

msg.first.arg.not.regexp = \
    {0}.prototype.{1} 的第一个参数需为正则表达式.

msg.arrowfunction.generator = \
    无法将箭头函数转换为生成器.

# Arguments

msg.arguments.not.access.strict = \
    严格模式下无法访问 arguments 对象的 "{0}" 属性.

msg.object.cyclic.prototype = \
    Cyclic 类型的原型属性 "{0}" 不可访问.

msg.default.args.use.strict = \
    带有默认参数的函数不可使用 "use strict" 指令.

# Symbol support

msg.object.not.symbolscriptable = \
    对象 {0} 不支持 Symbol 类型的键.

msg.no.assign.symbol.strict = \
    Symbol 对象在严格模式下可能没有被赋值必要的属性.

msg.not.a.string = \
    对象非字符串类型.

msg.not.a.number = \
    对象非数字类型.

msg.cant.convert.to.number = \
    无法将 {0} 转换为数字类型.

msg.no.symbol.new = \
    使用 "new" 关键字的 Symbol 对象可能未被构造.

msg.compare.symbol = \
    Symbol 对象可能不可比较.

msg.no.new = \
    使用 "new" 关键字的 {0} 对象可能未被构造.

msg.map.function.not = \
    Map 函数非实际意义上的函数.

msg.constructor.no.function = \
    {0} 的构造器可能未被作为函数调用.

msg.this.not.instance = \
    "this" 非类的实例.

# Promises

msg.function.expected = \
    第一个参数需为函数类型.

msg.constructor.expected = \
    第一个参数需为构造器.

msg.promise.self.resolution = \
    Promise 正在对自身进行解析.

msg.promise.capability.state = \
    无效的 promise 状态.

msg.promise.all.toobig = \
    Promise.all 输入值过多.

msg.promise.any.toobig = \
    Promise.any 输入值过多.

msg.typed.array.ctor.incompatible = \
    调用了 %TypedArray%.prototype.{0} 方法, 但接收对象不兼容.

msg.typed.array.bad.offset = \
    偏移量 {0} 超出范围.

msg.typed.array.bad.length = \
    长度 {0} 超出范围.

msg.typed.array.bad.offset.byte.size = \
    偏移量 {0} 必须是字节大小的倍数 {1}.

msg.typed.array.bad.buffer.length.byte.size = \
    使用的缓冲区长度 {0} 必须是字节大小的倍数 {1}.

msg.typed.array.bad.source.array = \
    源数组过长.

msg.typed.array.index.out.of.bounds = \
    索引 {0} 越界: [{1}..{2}].

# Error

msg.iterable.expected = \
    第一个参数需为 iterable 类型.

# ArrayBuffer

msg.species.invalid.ctor = \
    对象构造器的 [Symbol.species] 属性需为构造器.

msg.arraybuf.smaller.len = \
    ArrayBuffer 包含 {1} 字节, 少于所需的 {0} 字节.

msg.arraybuf.same = \
    需要不同的 ArrayBuffer.
