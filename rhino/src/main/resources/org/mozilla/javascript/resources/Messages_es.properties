#
# Default JavaScript messages file.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This is replaced during jar assembly from property string
# and should not be translated
implementation.version = @IMPLEMENTATION.VERSION@

#
# To add JavaScript error messages for a particular locale, create a
# new Messages_[locale].properties file, where [locale] is the Java
# string abbreviation for that locale.  For example, JavaScript
# messages for the Polish locale should be located in
# Messages_pl.properties, and messages for the Italian Swiss locale
# should be located in Messages_it_CH.properties.  Message properties
# files should be accessible through the classpath under
# org.mozilla.javascript.resources
#
# See:
# java.util.ResourceBundle
# java.text.MessageFormat
#

# SomeJavaClassWhereUsed

params.omit.non.js.object.warning = true

msg.non.js.object.warning = \
    Falta la conversión de Context.javaToJS(): Rhino detectó el objeto "{0}" de la clase "{1}" donde esperaba String, Number, Boolean o una instancia del tipo Scriptable. Por favor verifica tu código para ver si falta una llamada de Context.javaToJS().

# Codegen

msg.dup.parms = \
    Nombre de parámetro duplicado "{0}".

msg.too.big.jump = \
    Programa demasiado complejo: offset de salto demasiado grande.

msg.too.big.index = \
    Programa demasiado complejo: el índice interno excede el límite de 64K.

msg.while.compiling.fn = \
    Se ha encontrado un error de generación de código al compilar la función "{0}": {1}.

msg.while.compiling.script = \
    Se ha encontrado un error de generación de código al compilar el script: {0}.

# Context

msg.ctor.not.found = \
    No se ha encontrado el constructor de "{0}".

msg.not.ctor = \
    "{0}" no es un constructor.

# FunctionObject

msg.varargs.ctor = \
    El método o constructor "{0}" debe ser estático con la firma \
    "(Contexto cx, Objeto[] args, Función ctorObj, booleano inNuevoExpr)" \
    para definir un constructor de argumentos variables.

msg.varargs.fun = \
    El método "{0}" debe ser estático con la firma \
    "(Contexto cx, Scriptable thisObj, Objeto[] args, Función funObj)" \
    para definir una función de argumentos variables.

msg.incompat.call = \
    Método "{0}" llamado en un objeto incompatible.

msg.incompat.call.details = \
    Método "{0}" llamado en un objeto incompatible ({1} no es una instancia de {2}).

msg.bad.parms = \
    Tipo de parámetro "{0}" no soportado en el método "{1}".

msg.bad.method.return = \
    Tipo de retorno "{0}" no soportado en el método "{1}".

msg.bad.ctor.return = \
    No se admite la construcción de objetos del tipo "{0}".

msg.no.overload = \
    El método "{0}" aparece varias veces en la clase "{1}".

msg.method.not.found = \
    El método "{0}" no se encuentra en "{1}".

msg.method.missing.parameter = \
    {0}: Se requieren al menos {1} argumentos, pero sólo se pasan {2}.

# IRFactory

msg.bad.for.in.lhs = \
    Lado izquierdo inválido del bucle for...in.

msg.mult.index = \
    Sólo se permite una variable en el bucle for...in.

msg.bad.for.in.destruct = \
    El lado izquierdo del bucle for...in debe ser un array de longitud 2 para aceptar \
    par clave/valor.

msg.bad.computed.property.in.destruct = \
    Propiedad calculada no compatible en la desestructuración.

msg.cant.convert = \
    No se puede convertir al tipo "{0}".

msg.bad.assign.left = \
    Lado izquierdo de la asignación inválido.

msg.bad.decr = \
    Operando de decremento inválido.

msg.bad.incr = \
    Operando de incremento inválido.

msg.bad.yield = \
    yield debe estar en una función.

msg.nullish.bad.token = \
    Error de sintaxis: token inesperado.

msg.yield.parenthesized = \
    La expresión yield debe estar entre paréntesis.

# NativeGlobal

msg.cant.call.indirect = \
    La función "{0}" debe ser llamada directamente, y no a través de una \
    función con otro nombre.

msg.eval.nonstring = \
    Llamar a eval() con cualquier cosa que no sea un valor de cadena primitivo \
    simplemente devolverá el valor. ¿Es esto lo que pretende?

msg.eval.nonstring.strict = \
    Llamar a eval() con cualquier cosa que no sea un valor de cadena primitivo no está \
    permitido en modo estricto.

msg.bad.destruct.op = \
    Operador de asignación de desestructuración inválido.

# NativeCall

msg.only.from.new = \
    "Constructor {0}" sólo puede ser invocado desde una expresión "new".

msg.deprec.ctor = \
    El constructor "{0}" está obsoleto.

# NativeFunction

msg.no.function.ref.found = \
    No se ha encontrado ninguna fuente para descompilar la referencia a la función {0}.

msg.arg.isnt.array = \
    El segundo argumento de Function.prototype.apply debe ser un array.

# NativeGlobal

msg.bad.esc.mask = \
    máscara de escape de cadena no válida (ver HTEscape.c).

# NativeJavaClass

msg.cant.instantiate = \
    error al instanciar ({0}): la clase {1} es interfaz o abstracta.

msg.bad.ctor.sig = \
    Se ha encontrado un constructor con una firma incorrecta: \
    {0} llamando a {1} con firma {2}.

msg.not.java.obj = \
    Se espera que el argumento de getClass() sea un objeto Java.

msg.no.java.ctor = \
    No se ha encontrado el constructor Java para "{0}" con argumentos "{1}".

# NativeJavaMethod

msg.method.ambiguous = \
    La elección del método Java {0}.{1} que coincide con los tipos de argumentos de JavaScript ({2}) es ambigua; \
    los métodos candidatos son: {3}.

msg.constructor.ambiguous = \
    La elección del constructor Java {0} que coincide con los tipos de argumentos de JavaScript ({1}) es ambigua; \
    los constructores candidatos son: {2}.

# NativeJavaObject

msg.conversion.not.allowed = \
    No se puede convertir {0} en {1}.

msg.no.empty.interface.conversion = \
    No se puede convertir la función a la interfaz {0} sin métodos.

msg.no.function.interface.conversion = \
    No se puede convertir la función a la interfaz {0} ya que contiene métodos con \
    con nombres diferentes.

msg.undefined.function.interface = \
    La propiedad "{0}" no está definida en el adaptador de interfaz.

msg.not.function.interface = \
    La propiedad "{0}" no es una función en el adaptador de interfaz.

# NativeJavaPackage

msg.not.classloader = \
    El constructor de "Paquetes" espera un argumento de tipo java.lang.Classloader.

# NativeRegExp

msg.bad.quant = \
    Cuantificador inválido {0}.

msg.overlarge.backref = \
    Referencia posterior demasiado grande {0}.

msg.overlarge.min = \
    Mínimo excesivamente grande {0}.

msg.overlarge.max = \
    Máximo demasiado grande {0}.

msg.zero.quant = \
    Cuantificador cero {0}.

msg.max.lt.min = \
    Máximo {0} menor que el mínimo.

msg.unterm.quant = \
    Cuantificador no terminado {0}.

msg.unterm.paren = \
    Paréntesis no terminado {0}.

msg.unterm.class = \
    Clase de caracteres no terminada {0}.

msg.bad.range = \
    Rango no válido en la clase de caracteres.

msg.trail.backslash = \
    El final de ''\\'' en la expresión regular.

msg.re.unmatched.right.paren = \
    El símbolo '')'' no coincide con el de la expresión regular.

msg.no.regexp = \
    Las expresiones regulares no están disponibles.

msg.bad.backref = \
    La retro-referencia excede el número de paréntesis de captura.

msg.bad.regexp.compile = \
    Sólo se puede especificar un argumento si el primer argumento de \
    RegExp.prototype.compile es un objeto RegExp.

msg.str.match.all.no.global.flag = \
    String.prototype.matchAll llamado con un argumento RegExp no global.

msg.arg.not.object = \
    Se esperaba un argumento del tipo "Objeto JavaScript", pero en su lugar se obtuvo el tipo "{0}".

# NativeDate

msg.invalid.date = \
    La fecha no es válida.

msg.invalid.toprimitive.hint = \
    [Symbol.toPrimitive]: se esperaba "string", "number" o "default", pero se obtuvo "{0}".

msg.toisostring.must.return.primitive = \
    toISOString debe devolver un valor primitivo, pero en su lugar devolvió "{0}".

# NativeJSON

msg.json.cant.serialize = \
    No se sabe cómo serializar un {0}.

# Parser

msg.got.syntax.errors = \
    La compilación produjo {0} errores de sintaxis.

msg.var.redecl = \
    TypeError: redeclaración de variable ("var {0}" existe).

msg.const.redecl = \
    TypeError: redeclaración de variable ("const {0}" existe).

msg.let.redecl = \
    TypeError: redeclaración de variable ("let {0}" existe).

msg.parm.redecl = \
    TypeError: redeclaración de parámetro formal {0}.

msg.fn.redecl = \
    TypeError: redeclaración de la función {0}.

msg.let.decl.not.in.block = \
    SyntaxError: la declaración let no está directamente dentro del bloque.

msg.bad.object.init = \
    SyntaxError: inicializador de objeto no válido.

# NodeTransformer

msg.dup.label = \
    etiqueta duplicada.

msg.undef.label = \
    etiqueta indefinida.

msg.bad.break = \
    unlabelled break debe estar dentro de un bucle o switch.

msg.continue.outside = \
    continue debe estar dentro del bucle.

msg.continue.nonloop = \
    continue sólo puede usar etiquetas de sentencias de iteración.

msg.bad.throw.eol = \
    No se permite el terminador de línea entre la palabra clave throw y la expresión throw \
    expresión.

msg.no.paren.parms = \
    Falta "(" antes de los parámetros de la función.

msg.no.parm = \
    Falta un parámetro formal.

msg.parm.after.rest = \
    Parámetro después del parámetro rest.

msg.no.paren.after.parms = \
    Falta ")" después de los parámetros formales.

msg.no.brace.body = \
    Falta "{" antes del cuerpo de la función.

msg.no.brace.after.body = \
    Falta "}" después del cuerpo de la función.

msg.no.paren.cond = \
    Falta "(" antes de la condición.

msg.no.paren.after.cond = \
    falta ")" después de la condición.

msg.no.semi.stmt = \
    Falta ";" antes de la expresión.

msg.missing.semi = \
    Falta ";" después de la expresión.

msg.no.name.after.dot = \
    Falta el nombre después del operador ".".

msg.no.name.after.coloncolon = \
    Falta el nombre después del operador "::".

msg.no.name.after.dotdot = \
    Falta el nombre después del operador "..".

msg.no.name.after.xmlAttr = \
    Falta el nombre después del operador XML ".@".

msg.no.bracket.index = \
    Falta "]" en la expresión de índice.

msg.no.paren.switch = \
    Falta "(" antes de la expresión de conmutación.

msg.no.paren.after.switch = \
    Falta ")" después de la expresión de conmutación.

msg.no.brace.switch = \
    Falta "{" antes del cuerpo del switch.

msg.bad.switch = \
    Declaración de conmutación inválida.

msg.no.colon.case = \
    Falta ":" después de la expresión case.

msg.double.switch.default = \
    sólo se permite una etiqueta por defecto en la sentencia switch.

msg.no.while.do = \
    falta while después del cuerpo del bucle do...while.

msg.no.paren.for = \
    falta "(" después de for.

msg.no.semi.for = \
    falta ";" después del inicializador del bucle for.

msg.no.semi.for.cond = \
    falta ";" después de la condición del bucle for.

msg.in.after.for.name = \
    Falta "in" después de for.

msg.no.paren.for.ctrl = \
    falta ")" después del control del bucle for.

msg.no.paren.with = \
    falta "(" antes del objeto with-statement.

msg.no.paren.after.with = \
    falta ")" después del objeto with-statement.

msg.no.with.strict = \
    Las sentencias with no están permitidas en modo estricto.

msg.no.paren.after.let = \
    Falta "(" después de let.

msg.no.paren.let = \
    Falta "(" después de la lista de variables.

msg.no.curly.let = \
    Falta "}" después de la sentencia let.

msg.bad.return = \
    Return inválido.

msg.no.brace.block = \
    Falta "}" en una sentencia compuesta.

msg.bad.label = \
    Etiqueta inválida.

msg.bad.var = \
    Falta el nombre de la variable.

msg.bad.var.init = \
    Inicialización de variable inválida.

msg.no.colon.cond = \
    Falta ":" en la expresión condicional.

msg.no.paren.arg = \
    Falta ")" después de la lista de argumentos.

msg.no.bracket.arg = \
    Falta "]" después de la lista de elementos.

msg.bad.prop = \
    Identificación de la propiedad no válida.

msg.no.colon.prop = \
    Falta ":" después del identificador de la propiedad.

msg.no.brace.prop = \
    Falta "}" después de la lista de propiedades.

msg.no.paren = \
    falta ")" en el paréntesis.

msg.reserved.id = \
    el identificador es una palabra reservada: {0}.

msg.optional.super = \
    super no está permitido en una expresión de encadenamiento opcional.

msg.super.delete = \
    No se puede eliminar una propiedad de super.

msg.syntax.invalid.assignment.lhs = \
    Error de sintaxis: lado izquierdo inválido en la asignación.

msg.no.paren.catch = \
    falta "(" antes de la condición del bloque de captura.

msg.bad.catchcond = \
    condición de bloque catch inválida.

msg.catch.unreachable = \
    cualquier cláusula catch que siga a un catch no cualificado es inalcanzable.

msg.no.brace.try = \
    Falta "{" antes del bloque try.

msg.no.brace.catchblock = \
    Falta "{" antes del cuerpo del bloque catch.

msg.try.no.catchfinally = \
    ''try'' sin ''catch'' o ''finally''.

msg.no.return.value = \
    la función {0} no siempre devuelve un valor.

msg.anon.no.return.value = \
    la función anónima no siempre devuelve un valor.

msg.return.inconsistent = \
    la declaración de retorno es inconsistente con el uso anterior.

msg.generator.returns = \
    TypeError: la función generadora {0} devuelve un valor.

msg.super.shorthand.function = \
    super debe estar dentro de una función abreviada.

msg.anon.generator.returns = \
    TypeError: la función generadora anónima devuelve un valor.

msg.syntax = \
    Error de sintaxis.

msg.unexpected.eof = \
    Fin de archivo inesperado.

msg.XML.bad.form = \
    Sintaxis XML mal formada.

msg.XML.not.available = \
    Tiempo de ejecución XML no disponible.

msg.too.deep.parser.recursion = \
    Recursión demasiado profunda durante el análisis.

msg.too.many.constructor.args = \
    Demasiados argumentos del constructor.

msg.too.many.function.args = \
    Demasiados argumentos de función.

msg.no.side.effects = \
    El código no tiene efectos secundarios.

msg.extra.trailing.semi = \
    Punto y coma al final del código.

msg.extra.trailing.comma = \
    La coma final no es legal en un inicializador de objetos ECMA-262.

msg.trailing.array.comma = \
    La coma al final de un literal de matriz tiene un comportamiento diferente entre navegadores.

msg.equal.as.assign = \
    ¿Prueba de igualdad (==) mal escrita como asignación (=)?

msg.var.hides.arg = \
    La variable {0} oculta el argumento.

msg.default.args = \
    Los valores predeterminados solo se admiten en la versión >= 200.

msg.destruct.assign.no.init = \
    Falta "=" en la declaración de desestructuración.

msg.destruct.default.vals = \
    No se admiten los valores por defecto en las declaraciones de desestructuración.

msg.no.old.octal.strict = \
    Números octales antiguos prohibidos en modo estricto.

msg.no.old.octal.bigint = \
    Números octales antiguos prohibidos en BigInt.

msg.dup.obj.lit.prop.strict = \
    La propiedad "{0}" ya está definida en este objeto literal.

msg.dup.param.strict = \
    El parámetro "{0}" ya está declarado en esta función.

msg.bad.id.strict = \
    "{0}" no es un identificador válido para este uso en modo estricto.

msg.no.unary.expr.on.left.exp = \
    "{0}" no está permitido en el lado izquierdo de "**".

# ScriptRuntime

# is there a better message for this?
# it's currently only used as a poison pill for caller, caller and arguments properties
msg.op.not.allowed = \
    Esta operación no está permitida.

msg.no.properties = \
    {0} no tiene propiedades.

msg.invalid.iterator = \
    Valor de iterador inválido.

msg.iterator.primitive = \
    __iterator__ ha devuelto un valor primitivo.

msg.not.iterable = \
    {0} no es iterable.

msg.invalid.for.each = \
    Bucle for...each no válido.

msg.assn.create.strict = \
    Asignación a una variable no declarada {0}.

msg.ref.undefined.prop = \
    Referencia a una propiedad indefinida {0}.

msg.prop.not.found = \
    Propiedad {0} no encontrada.

msg.set.prop.no.setter = \
    No se puede establecer la propiedad ''{0}'' que sólo tiene un getter al valor ''{1}''.

msg.invalid.type = \
    Valor JavaScript inválido de tipo {0}.

msg.primitive.expected = \
    Se esperaba un tipo primitivo (tenía {0} en su lugar).

msg.namespace.expected = \
    Se esperaba un objeto de espacio de nombres a la izquierda de :: (en su lugar se encontró {0}).

msg.null.to.object = \
    No se puede convertir null en un objeto.

msg.undef.to.object = \
    No se puede convertir undefined en un objeto.

msg.cant.convert.to.bigint = \
    No se puede convertir {0} en un BigInt.

msg.cant.convert.to.bigint.isnt.integer = \
    No se puede convertir {0} en un BigInt porque no es un entero.

msg.bigint.bad.form = \
    sintaxis de BigInt.

msg.cyclic.value = \
    Valor {0} cíclico no permitido.

msg.is.not.defined = \
    "{0}" no está definido.

msg.undef.prop.read = \
    No se puede leer la propiedad "{1}" de {0}.

msg.undef.prop.write = \
    No se puede establecer la propiedad "{1}" de {0} a "{2}".

msg.undef.prop.delete = \
    No se puede eliminar la propiedad "{1}" de {0}.

msg.undef.method.call = \
    No se puede llamar al método "{1}" de {0}.

msg.undef.with = \
    No se puede aplicar "with" a {0}.

msg.isnt.function = \
    {0} no es una función, es {1}.

msg.isnt.function.in = \
    No se puede llamar a la propiedad {0} en el objeto {1}. No es una función, es "{2}".

msg.function.not.found = \
    No se puede encontrar la función {0}.

msg.function.not.found.in = \
    No se puede encontrar la función {0} en el objeto {1}.

msg.isnt.xml.object = \
    {0} no es un objeto xml.

msg.no.ref.to.get = \
    {0} no es una referencia para leer un valor de referencia.

msg.no.ref.to.set = \
    {0} no es una referencia para establecer un valor de referencia en {1}.

msg.no.ref.from.function = \
    La función {0} no puede utilizarse como lado izquierdo de una asignación \
    o como operando de los operadores ++ o --.

msg.bad.default.value = \
    El método getDefaultValue() del objeto devuelve un objeto.

msg.instanceof.not.object = \
    No se puede usar ''instanceof'' en un no objeto.

msg.instanceof.bad.prototype = \
    La propiedad ''prototype'' de {0} no es un objeto.

msg.in.not.object = \
    No se puede usar ''in'' en un no objeto.

msg.bad.radix = \
    Radix ilegal {0}.

msg.division.zero = \
    División por cero.

msg.bigint.negative.exponent = \
    BigInt exponente negativo.

msg.cant.convert.to.primitive = \
    No se puede convertir el objeto a un valor primitivo.

msg.bigint.out.of.range.arithmetic = \
    BigInt es demasiado grande.

# ScriptableObject

msg.default.value = \
    No se puede encontrar el valor por defecto del objeto.

msg.zero.arg.ctor = \
    No se puede cargar la clase "{0}" que no tiene constructor de parámetros cero.

duplicate.defineClass.name = \
    Método inválido "{0}": el nombre "{1}" ya está en uso.

msg.ctor.multiple.parms = \
    No se puede definir el constructor o la clase {0} ya que más de un \
    constructor tiene múltiples parámetros.

msg.extend.scriptable = \
    {0} debe extender ScriptableObject para poder definir la propiedad {1}.

msg.bad.getter.parms = \
    Para definir una propiedad, el getter {0} debe tener cero parámetros \
    o un único parámetro ScriptableObject.

msg.obj.getter.parms = \
    Se espera que el getter {0} estático o delegado tome un parámetro ScriptableObject.

msg.getter.static = \
    El getter y el setter deben ser ambos estáticos o ninguno de ellos.

msg.setter.return = \
    El setter debe tener un tipo de retorno void: {0}.

msg.setter2.parms = \
    El setter de dos parámetros debe tomar un ScriptableObject como primer parámetro.

msg.setter1.parms = \
    Se esperaba un setter de un solo parámetro para {0}.

msg.setter2.expected = \
    Se esperaba que el setter estático o delegado {0} tomara dos parámetros.

msg.setter.parms = \
    Se esperaba uno o dos parámetros para el emisor.

msg.setter.bad.type = \
    Tipo de parámetro no admitido "{0}" en el definidor "{1}".

msg.add.sealed = \
    No se puede añadir una propiedad a un objeto sellado: {0}.

msg.remove.sealed = \
    No se puede eliminar una propiedad de un objeto sellado: {0}.

msg.modify.sealed = \
    No se puede modificar una propiedad de un objeto sellado: {0}.

msg.modify.readonly = \
    No se puede modificar una propiedad de sólo lectura: {0}.

msg.both.data.and.accessor.desc = \
    No puede ser a la vez un descriptor de datos y de accesos.

msg.change.configurable.false.to.true = \
    No se puede cambiar el atributo configurable de "{0}" de falso a verdadero.

msg.change.enumerable.with.configurable.false = \
    No se puede cambiar el atributo enumerable de "{0}" porque configurable es falso.

msg.change.writable.false.to.true.with.configurable.false = \
    No se puede cambiar el atributo escribible de "{0}" de falso a verdadero porque configurable es falso.

msg.change.value.with.writable.false = \
    No se puede cambiar el valor del atributo "{0}" porque writable es falso.

msg.change.getter.with.configurable.false = \
    No se puede cambiar el atributo get de "{0}" porque configurable es falso.

msg.change.setter.with.configurable.false = \
    No se puede cambiar el atributo set de "{0}" porque configurable es falso.

msg.change.property.data.to.accessor.with.configurable.false = \
    No se puede cambiar "{0}" de una propiedad data a una propiedad accessor porque configurable es falso.

msg.change.property.accessor.to.data.with.configurable.false = \
    No se puede cambiar "{0}" de una propiedad accesoria a una propiedad de datos porque configurable es falso.

msg.not.extensible = \
    No se pueden añadir propiedades a este objeto porque extensible es falso.

msg.delete.property.with.configurable.false = \
    No se puede eliminar la propiedad "{0}" porque configurable es falso.

# TokenStream

msg.missing.exponent = \
    Falta el exponente.

msg.caught.nfe = \
    Error de formato de número.

msg.unterminated.string.lit = \
    literal de cadena sin terminar.

msg.unterminated.comment = \
    Comentario no terminado.

msg.unterminated.re.lit = \
    Literal de expresión regular sin terminar.

msg.invalid.re.flag = \
    bandera inválida ''{0}'' después de la expresión regular.

msg.no.re.input.for = \
    no hay entrada para {0}.

msg.illegal.character = \
    carácter ilegal: {0}.

msg.invalid.escape = \
    secuencia de escape Unicode no válida.

msg.bad.namespace = \
    no es una declaración válida de espacio de nombres por defecto. \
    La sintaxis es: "espacio de nombres xml por defecto = EXPRESIÓN;".

# TokensStream warnings
msg.bad.octal.literal = \
    dígito literal octal ilegal {0}; interpretándolo como un dígito decimal.

msg.reserved.keyword = \
    Uso ilegal de la futura palabra clave reservada {0}; interpretándola como un identificador ordinario.

# LiveConnect errors
msg.java.internal.field.type = \
    Error interno: la conversión de tipo de {0} para asignar a {1} en {2} falló.

msg.java.conversion.implicit_method = \
    No se puede encontrar el método convertidor "{0}" en la clase {1}.

msg.java.method.assign = \
    No se puede asignar el método Java "{0}".

msg.java.internal.private = \
    Error interno: intento de acceso al campo privado/protegido "{0}".

msg.java.no_such_method = \
    No se puede encontrar el método {0}.

msg.script.is.not.constructor = \
    Los objetos Script no son constructores.

msg.nonjava.method = \
    El método Java "{0}" fue invocado con {1} como valor "this" que no puede ser convertido al tipo Java {2}.

msg.java.member.not.found = \
    La clase Java "{0}" no tiene un campo de instancia público o un método llamado "{1}".

msg.java.array.index.out.of.bounds = \
    El índice de la matriz {0} está fuera de los límites [0..{1}].

msg.java.array.member.not.found = \
    Las matrices de Java no tienen campos de instancia ni métodos públicos denominados "{0}".

msg.pkg.int = \
    Los nombres de los paquetes Java no pueden ser números.

msg.access.prohibited = \
    El acceso a la clase Java "{0}" está prohibido.

# ImporterTopLevel

msg.ambig.import = \
    Importación ambigua: "{0}" y "{1}".

msg.not.pkg = \
    La función importPackage debe llamarse con un paquete; en su lugar, tenía "{0}".

msg.not.class = \
    La función importClass debe llamarse con una clase; en su lugar tenía "{0}".

msg.not.class.not.pkg = \
    "{0}" no es ni una clase ni un paquete.

msg.prop.defined = \
    No se puede importar "{0}" porque una propiedad con ese nombre ya está definida.

#JavaAdapter
msg.adapter.zero.args = \
    JavaAdapter requiere al menos un argumento.

msg.not.java.class.arg = \
    El argumento {0} no es la clase Java {1}.

#JavaAdapter
msg.only.one.super = \
    Sólo una clase puede ser extendida por un JavaAdapter. Tenía {0} y {1}.


# Arrays

msg.arraylength.bad = \
    Longitud de matriz inadecuada.

msg.arraylength.too.big = \
    La longitud del array {0} excede el límite de capacidad soportado.

msg.empty.array.reduce = \
    Reducción de array vacío sin valor inicial.

# URI

msg.bad.uri = \
    Secuencia URI mal formada.

# Number

msg.bad.precision = \
    Precisión {0} fuera de rango.

# NativeGenerator

msg.send.newborn = \
    Intento de enviar un valor al generador recién nacido.

msg.already.exec.gen = \
    Generador ya en ejecución.

msg.StopIteration.invalid = \
    StopIteration no puede ser cambiado a un objeto arbitrario.

msg.generator.executing = \
    El generador aún se está ejecutando desde una invocación anterior.

# Interpreter

msg.yield.closing = \
    Rendimiento del generador de cierre.

msg.called.null.or.undefined = \
    Método {0}.prototype.{1} llamado en null o indefinido.

msg.first.arg.not.regexp = \
    El primer argumento de {0}.prototype.{1} no debe ser una expresión regular.

msg.arrowfunction.generator = \
    La función de flecha no puede convertirse en generador.

# Arguments

msg.arguments.not.access.strict = \
    No se puede acceder a la propiedad "{0}" del objeto argumentos en modo estricto.

msg.default.args.use.strict = \
    Una función no puede tener la directiva "use strict" con argumentos predeterminados.

msg.object.cyclic.prototype = \
    No se permite el valor cíclico del prototipo "{0}".

# Symbol support

msg.object.not.symbolscriptable = \
    El objeto "{0}" no admite claves Symbol.

msg.no.assign.symbol.strict = \
    No se pueden asignar propiedades a los objetos Symbol en modo estricto.

msg.not.a.string = \
    El objeto no es una cadena.

msg.not.a.number = \
    El objeto no es un número.

msg.cant.convert.to.number = \
    No se puede convertir {0} en un número.

msg.no.symbol.new = \
    Los objetos símbolo no pueden construirse con ''new''.

msg.compare.symbol = \
    Los objetos símbolo no pueden ser comparados.

msg.no.new = \
    Los objetos {0} no pueden construirse con ''new''.

msg.map.function.not = \
    La función de mapa no es realmente una función.

msg.constructor.no.function = \
    El constructor de {0} no puede ser invocado como una función.

msg.this.not.instance = \
    ''this'' no es una instancia de la clase.

# Promises

msg.function.expected = \
    Se espera que el primer argumento sea una función.

msg.constructor.expected = \
    Se espera que el primer argumento sea un constructor.

msg.promise.self.resolution = \
    La promesa se está auto-resolviendo.

msg.promise.capability.state = \
    Estado de la capacidad de la promesa inválido.

msg.promise.all.toobig = \
    Demasiadas entradas a Promise.all.

msg.promise.any.toobig = \
    Demasiadas entradas para Promise.any.

msg.typed.array.ctor.incompatible = \
    Método %TypedArray%.prototype.{0} llamado en un receptor incompatible.

msg.typed.array.bad.offset = \
    El desplazamiento {0} está fuera del rango.

msg.typed.array.bad.length = \
    La longitud {0} está fuera del rango.

msg.typed.array.bad.offset.byte.size = \
    El desplazamiento {0} debe ser un múltiplo del tamaño de byte {1}.

msg.typed.array.bad.buffer.length.byte.size = \
    La longitud del buffer usado {0} debe ser un múltiplo del tamaño de byte {1}.

msg.typed.array.bad.source.array = \
    La matriz de origen es demasiado larga.

msg.typed.array.index.out.of.bounds = \
    El índice {0} está fuera de los límites [{1}..{2}].

# Error

msg.iterable.expected = \
    Se esperaba que el primer argumento fuera iterable.

# ArrayBuffer

msg.species.invalid.ctor = \
    La propiedad [Symbol.species] del constructor del objeto no es un constructor.

msg.arraybuf.smaller.len = \
    Se esperaba un ArrayBuffer con al menos {0} bytes, pero se obtuvieron {1} bytes.

msg.arraybuf.same = \
    Se esperaba un ArrayBuffer diferente.