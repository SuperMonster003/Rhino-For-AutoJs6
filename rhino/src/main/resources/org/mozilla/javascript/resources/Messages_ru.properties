#
# Default JavaScript messages file.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This is replaced during jar assembly from property string
# and should not be translated
implementation.version = @IMPLEMENTATION.VERSION@

#
# To add JavaScript error messages for a particular locale, create a
# new Messages_[locale].properties file, where [locale] is the Java
# string abbreviation for that locale.  For example, JavaScript
# messages for the Polish locale should be located in
# Messages_pl.properties, and messages for the Italian Swiss locale
# should be located in Messages_it_CH.properties.  Message properties
# files should be accessible through the classpath under
# org.mozilla.javascript.resources
#
# See:
# java.util.ResourceBundle
# java.text.MessageFormat
#

# SomeJavaClassWhereUsed

params.omit.non.js.object.warning = true

# Codegen

msg.dup.parms = \
    Дублируется имя параметра "{0}".

msg.too.big.jump = \
    Слишком сложная программа: слишком большое смещение перехода.

msg.too.big.index = \
    Слишком сложная программа: внутренний индекс превышает лимит в 64К.

msg.while.compiling.fn = \
    Возникла ошибка генерации кода при компиляции функции "{0}": {1}.

msg.while.compiling.script = \
    Возникла ошибка генерации кода при компиляции скрипта: {0}.

# Context

msg.ctor.not.found = \
    Конструктор для "{0}" не найден.

msg.not.ctor = \
    "{0}" не является конструктором.

# FunctionObject

msg.varargs.ctor = \
    Метод или конструктор "{0}" должен быть статическим с сигнатурой \
    "(Context cx, Object[] args, Function ctorObj, boolean inNewExpr)" \
    для определения конструктора аргументов переменной.

msg.varargs.fun = \
    Метод "{0}" должен быть статическим с сигнатурой \
    "(Context cx, Scriptable thisObj, Object[] args, Function funObj)" \
    для определения функции переменных аргументов.

msg.incompat.call = \
    Метод "{0}" вызван на несовместимом объекте.

msg.incompat.call.details = \
    Метод "{0}" вызван на несовместимом объекте ({1} не является экземпляром {2}).

msg.bad.parms = \
    Неподдерживаемый тип параметра "{0}" в методе "{1}".

msg.bad.method.return = \
    Неподдерживаемый тип возврата "{0}" в методе "{1}".

msg.bad.ctor.return = \
    Не поддерживается построение объектов типа "{0}".

msg.no.overload = \
    Метод "{0}" встречается несколько раз в классе "{1}".

msg.method.not.found = \
    Метод "{0}" не найден в классе "{1}".

msg.method.missing.parameter = \
    {0}: Требуется не менее {1} аргументов, но передано только {2}.

# IRFactory

msg.bad.for.in.lhs = \
    Неверная левая часть цикла for...in.

msg.mult.index = \
    В цикле for...in разрешена только одна переменная.

msg.bad.for.in.destruct = \
    Левая часть цикла for...in должна быть массивом длины 2, чтобы принимать \
    пары ключ/значение.

msg.cant.convert = \
    Невозможно преобразовать к типу "{0}".

msg.bad.assign.left = \
    Неверное присвоение левой части.

msg.bad.decr = \
    Неверный операнд декремента.

msg.bad.incr = \
    Неверный операнд инкремента.

msg.bad.yield = \
    yield должен находиться в функции.

msg.yield.parenthesized = \
    Выражение yield должно быть заключено в круглые скобки.

# NativeGlobal

msg.cant.call.indirect = \
    Функция "{0}" должна быть вызвана непосредственно, а не через \
    функции с другим именем.

msg.eval.nonstring = \
    Вызов eval() с любым другим значением, кроме примитивного строкового значения, будет \
    просто вернет это значение. Это то, что вы задумали?

msg.eval.nonstring.strict = \
    Вызов eval() с любым другим значением, кроме примитивного строкового значения, запрещен \
    разрешен в строгом режиме.

msg.bad.destruct.op = \
    Неверный оператор присваивания деструктуризации.

# NativeCall

msg.only.from.new = \
    "Конструктор {0}" может быть вызван только из выражения "new".

msg.deprec.ctor = \
    Конструктор "{0}" является устаревшим.

# NativeFunction

msg.no.function.ref.found = \
    Не найден источник для декомпиляции ссылки на функцию {0}.

msg.arg.isnt.array = \
    Второй аргумент Function.prototype.apply должен быть массивом.

# NativeGlobal

msg.bad.esc.mask = \
    Недопустимая маска экранирования строки (см. HTEscape.c).

# NativeJavaClass

msg.cant.instantiate = \
    ошибка инстанцирования ({0}): класс {1} является интерфейсом или абстракцией.

msg.bad.ctor.sig = \
    Найден конструктор с неправильной сигнатурой: \
    {0} вызывает {1} с сигнатурой {2}.

msg.not.java.obj = \
    Ожидается, что аргумент getClass() будет объектом Java.

msg.no.java.ctor = \
    Java-конструктор для "{0}" с аргументами "{1}" не найден.

# NativeJavaMethod

msg.method.ambiguous = \
    Выбор метода Java {0}.{1}, соответствующего типу аргументов JavaScript ({2}), неоднозначен; \
    методами-кандидатами являются: {3}.

msg.constructor.ambiguous = \
    Выбор Java-конструктора {0}, соответствующего типам аргументов JavaScript ({1}), неоднозначен; \
    кандидатами в конструкторы являются: {2}.

# NativeJavaObject

msg.conversion.not.allowed = \
    Невозможно преобразовать {0} в {1}.

msg.no.empty.interface.conversion = \
    Невозможно преобразовать функцию в интерфейс {0} без методов.

msg.no.function.interface.conversion = \
    Невозможно преобразовать функцию в интерфейс {0}, поскольку он содержит методы с \
    разными именами.

msg.undefined.function.interface = \
    Свойство "{0}" не определено в адаптере интерфейса.

msg.not.function.interface = \
    Свойство "{0}" не является функцией в адаптере интерфейса.

# NativeJavaPackage

msg.not.classloader = \
    Конструктор для "Packages" ожидает аргумент типа java.lang.Classloader.

# NativeRegExp

msg.bad.quant = \
    Недопустимый квантификатор {0}.

msg.overlarge.backref = \
    Слишком большая обратная ссылка {0}.

msg.overlarge.min = \
    Чрезмерно большой минимум {0}.

msg.overlarge.max = \
    Чрезмерно большой максимум {0}.

msg.zero.quant = \
    Нулевой квантификатор {0}.

msg.max.lt.min = \
    Максимум {0} меньше минимума.

msg.unterm.quant = \
    Нетерминированный квантификатор {0}.

msg.unterm.paren = \
    Нетерминированный скобка {0}.

msg.unterm.class = \
    Непредельный класс символов {0}.

msg.bad.range = \
    Неверный диапазон в классе символов.

msg.trail.backslash = \
    Несоответствие ''\\'' в регулярном выражении.

msg.re.unmatched.right.paren = \
    Несовпадение '')'' в регулярном выражении.

msg.no.regexp = \
    Регулярные выражения недоступны.

msg.bad.backref = \
    Обратная ссылка превышает количество фиксирующих круглых скобок.

msg.bad.regexp.compile = \
    Может быть указан только один аргумент, если первый аргумент функции \
    RegExp.prototype.compile является объект RegExp.

msg.arg.not.object = \
    Ожидался аргумент типа object, но вместо него был тип {0}.

# NativeDate

msg.invalid.date = \
    Дата недействительна.

msg.toisostring.must.return.primitive = \
    toISOString должен возвращать примитивное значение, но вместо этого возвращает "{0}".

# NativeJSON

msg.json.cant.serialize = \
    Неизвестно, как сериализовать {0}.

# Parser

msg.got.syntax.errors = \
    Компиляция выдала {0} синтаксических ошибок.

msg.var.redecl = \
    TypeError: повторное объявление переменной ("var {0}" существует).

msg.const.redecl = \
    TypeError: повторное объявление переменной ("const {0}" существует).

msg.let.redecl = \
    TypeError: повторное объявление переменной ("let {0}" существует).

msg.parm.redecl = \
    TypeError: повторное объявление формального параметра {0}.

msg.fn.redecl = \
    TypeError: повторное объявление функции {0}.

msg.let.decl.not.in.block = \
    SyntaxError: объявление let не находится непосредственно в блоке.

msg.bad.object.init = \
    SyntaxError: неверный инициализатор объекта.

# NodeTransformer

msg.dup.label = \
    дублированная метка.

msg.undef.label = \
    неопределенная метка.

msg.bad.break = \
    немаркированный break должен находиться внутри цикла или switch.

msg.continue.outside = \
    continue должен быть внутри цикла.

msg.continue.nonloop = \
    continue может использовать только метки итерационных операторов.

msg.bad.throw.eol = \
    Терминатор строки не допускается между ключевым словом throw и выражением throw \
    выражением.

msg.no.paren.parms = \
    Отсутствие "(" перед параметрами функции.

msg.no.parm = \
    пропущен формальный параметр.

msg.no.paren.after.parms = \
    Отсутствует ")" после формальных параметров.

msg.no.brace.body = \
    пропущен "{" перед телом функции.

msg.no.brace.after.body = \
    отсутствует "}" после тела функции.

msg.no.paren.cond = \
    отсутствует "(" перед условием.

msg.no.paren.after.cond = \
    отсутствует ")" после условия.

msg.no.semi.stmt = \
    отсутствует ";" перед утверждением.

msg.missing.semi = \
    пропущено ";" после оператора.

msg.no.name.after.dot = \
    пропущено имя после оператора ".".

msg.no.name.after.coloncolon = \
    пропущено имя после оператора "::".

msg.no.name.after.dotdot = \
    пропущено имя после оператора ".".

msg.no.name.after.xmlAttr = \
    пропущено имя после ".@" атрибута XML.

msg.no.bracket.index = \
    отсутствует "]" в индексном выражении.

msg.no.paren.switch = \
    отсутствует "(" перед выражением switch.

msg.no.paren.after.switch = \
    отсутствует ")" после выражения switch.

msg.no.brace.switch = \
    отсутствует "{" перед телом переключателя.

msg.bad.switch = \
    неверный оператор switch.

msg.no.colon.case = \
    отсутствует ":" после выражения case.

msg.double.switch.default = \
    в операторе switch допускается только одна метка по умолчанию.

msg.no.while.do = \
    пропущено while после do...while в теле цикла.

msg.no.paren.for = \
    отсутствует "(" после for.

msg.no.semi.for = \
    отсутствует ";" после инициализатора цикла for.

msg.no.semi.for.cond = \
    отсутствует ";" после условия цикла for.

msg.in.after.for.name = \
    пропущено "in" после for.

msg.no.paren.for.ctrl = \
    отсутствует ")" после управления циклом for.

msg.no.paren.with = \
    отсутствует "(" перед объектом with-statement.

msg.no.paren.after.with = \
    пропущено ")" после объекта with-statement.

msg.no.with.strict = \
    оператор with не допускается в строгом режиме.

msg.no.paren.after.let = \
    отсутствует "(" после let.

msg.no.paren.let = \
    отсутствует ")" после списка переменных.

msg.no.curly.let = \
    пропущено "}" после оператора let.

msg.bad.return = \
    некорректный return.

msg.no.brace.block = \
    пропущено "}" в составном выражении.

msg.bad.label = \
    неверная метка.

msg.bad.var = \
    пропущено имя переменной.

msg.bad.var.init = \
    неверная инициализация переменной.

msg.no.colon.cond = \
    Отсутствует ":" в условном выражении.

msg.no.paren.arg = \
    отсутствует ")" после списка аргументов.

msg.no.bracket.arg = \
    отсутствует "]" после списка элементов.

msg.bad.prop = \
    неверный идентификатор свойства.

msg.no.colon.prop = \
    отсутствует ":" после идентификатора свойства.

msg.no.brace.prop = \
    отсутствует "}" после списка свойств.

msg.no.paren = \
    отсутствует ")" в скобках.

msg.reserved.id = \
    идентификатор является зарезервированным словом: {0}.

msg.no.paren.catch = \
    отсутствует "(" перед условием блока catch.

msg.bad.catchcond = \
    неверное условие блока catch.

msg.catch.unreachable = \
    все предложения catch, следующие за неквалифицированным catch, недостижимы.

msg.no.brace.try = \
    Отсутствует "{" перед блоком try.

msg.no.brace.catchblock = \
    отсутствует "{" перед телом блока catch.

msg.try.no.catchfinally = \
    ''try'' без ''catch'' или ''finally''.

msg.no.return.value = \
    Функция {0} не всегда возвращает значение.

msg.anon.no.return.value = \
    анонимная функция не всегда возвращает значение.

msg.return.inconsistent = \
    оператор return не согласуется с предыдущим использованием.

msg.generator.returns = \
    TypeError: функция генератора {0} возвращает значение.

msg.anon.generator.returns = \
    TypeError: анонимная функция-генератор возвращает значение.

msg.syntax = \
    Синтаксическая ошибка.

msg.unexpected.eof = \
    Неожиданный конец файла.

msg.XML.bad.form = \
    Неправильно сформирован синтаксис XML.

msg.XML.not.available = \
    Недоступна среда выполнения XML.

msg.too.deep.parser.recursion = \
    Слишком глубокая рекурсия при разборе.

msg.too.many.constructor.args = \
    Слишком много аргументов конструктора.

msg.too.many.function.args = \
    Слишком много аргументов функции.

msg.no.side.effects = \
    Код не имеет побочных эффектов.

msg.extra.trailing.semi = \
    Лишняя точка с запятой.

msg.extra.trailing.comma = \
    Запятая в конце строки не разрешена в инициализаторе объекта ECMA-262.

msg.trailing.array.comma = \
    Запятая в литерале массива имеет различное поведение в кроссбраузерных браузерах.

msg.equal.as.assign = \
    Тест на равенство (==) ошибочно принят за присваивание (=)?

msg.var.hides.arg = \
    Переменная {0} скрывает аргумент.

msg.destruct.assign.no.init = \
    Отсутствие "=" в объявлении деструктуризации.

msg.destruct.default.vals = \
    Значения по умолчанию в объявлениях деструктуризации не поддерживаются.

msg.no.old.octal.strict = \
    Старые восьмеричные числа запрещены в строгом режиме.

msg.no.old.octal.bigint = \
    Старые восьмеричные числа запрещены в BigInt.

msg.dup.obj.lit.prop.strict = \
    Свойство "{0}" уже определено в этом объектном литерале.

msg.dup.param.strict = \
    Параметр "{0}" уже объявлен в этой функции.

msg.bad.id.strict = \
    "{0}" не является допустимым идентификатором для данного использования в строгом режиме.

msg.no.unary.expr.on.left.exp = \
    "{0}" не допускается в левой части "**".

# ScriptRuntime

# is there a better message for this?
# it's currently only used as a poison pill for caller, caller and arguments properties
msg.op.not.allowed = \
    Эта операция недопустима.

msg.no.properties = \
    У "{0}" нет свойств.

msg.invalid.iterator = \
    Недопустимое значение итератора.

msg.iterator.primitive = \
    __iterator__ вернул примитивное значение.

msg.not.iterable = \
    {0} не является итератором.

msg.invalid.for.each = \
    Недопустимый цикл for...each.

msg.assn.create.strict = \
    Присвоение необъявленной переменной {0}.

msg.ref.undefined.prop = \
    Ссылка на неопределенное свойство {0}.

msg.prop.not.found = \
    Свойство {0} не найдено.

msg.set.prop.no.setter = \
    Невозможно установить свойство ''{0}'', имеющее только геттер, в значение ''{1}''.

msg.invalid.type = \
    Неверное значение JavaScript типа {0}.

msg.primitive.expected = \
    Ожидался примитивный тип (вместо него было {0}).

msg.namespace.expected = \
    Ожидается объект пространства имен слева от :: (вместо этого найдено {0}).

msg.null.to.object = \
    Невозможно преобразовать null в объект.

msg.undef.to.object = \
    Невозможно преобразовать неопределенное в объект.

msg.cant.convert.to.bigint = \
    Невозможно преобразовать {0} в BigInt.

msg.cant.convert.to.bigint.isnt.integer = \
    Невозможно преобразовать {0} в BigInt, потому что это не целое число.

msg.bigint.bad.form = \
    не сформирован синтаксис BigInt.

msg.cyclic.value = \
    Циклическое значение {0} недопустимо.

msg.is.not.defined = \
    "{0}" не определено.

msg.undef.prop.read = \
    Невозможно прочитать свойство "{1}" из {0}.

msg.undef.prop.write = \
    Невозможно установить свойство "{1}" из {0} в "{2}".

msg.undef.prop.delete = \
    Невозможно удалить свойство "{1}" из {0}.

msg.undef.method.call = \
    Невозможно вызвать метод "{1}" из {0}.

msg.undef.with = \
    Невозможно применить "with" к {0}.

msg.isnt.function = \
    {0} не является функцией, это {1}.

msg.isnt.function.in = \
    Невозможно вызвать свойство {0} в объекте {1}. Это не функция, а "{2}".

msg.function.not.found = \
    Невозможно найти функцию {0}.

msg.function.not.found.in = \
    Невозможно найти функцию {0} в объекте {1}.

msg.isnt.xml.object = \
    {0} не является объектом xml.

msg.no.ref.to.get = \
    {0} не является ссылкой на чтение ссылочного значения.

msg.no.ref.to.set = \
    {0} не является ссылкой для установки значения ссылки на {1}.

msg.no.ref.from.function = \
    Функция {0} не может быть использована в качестве левой части присваивания \
    или в качестве операнда оператора ++ или --.

msg.bad.default.value = \
    Метод Object''s getDefaultValue() вернул объект.

msg.instanceof.not.object = \
    Нельзя использовать ''instanceof'' для не-объекта.

msg.instanceof.bad.prototype = \
    Свойство ''prototype'' объекта {0} не является объектом.

msg.in.not.object = \
    Невозможно использовать ''in'' для не-объекта.

msg.bad.radix = \
    недопустимый радикс {0}.

msg.division.zero = \
    Деление на ноль.

msg.bigint.negative.exponent = \
    BigInt отрицательная экспонента.

msg.bigint.out.of.range.arithmetic = \
    BigInt слишком велик.

# ScriptableObject

msg.default.value = \
    Невозможно найти значение по умолчанию для объекта.

msg.zero.arg.ctor = \
    Невозможно загрузить класс "{0}", у которого нет конструктора с нулевым параметром.

duplicate.defineClass.name = \
    Недопустимый метод "{0}": имя "{1}" уже используется.

msg.ctor.multiple.parms = \
    Невозможно определить конструктор или класс {0}, так как более одного \
    конструктор имеет несколько параметров.

msg.extend.scriptable = \
    {0} должен расширять ScriptableObject, чтобы определить свойство {1}.

msg.bad.getter.parms = \
    Чтобы определить свойство, геттер {0} должен иметь нулевые параметры \
    или один параметр ScriptableObject.

msg.obj.getter.parms = \
    Ожидается, что статический или делегированный геттер {0} будет принимать параметр ScriptableObject.

msg.getter.static = \
    Геттер и сеттер должны быть либо статическими, либо ни один из них не должен быть статическим.

msg.setter.return = \
    Setter должен иметь тип возврата void: {0}.

msg.setter2.parms = \
    Двухпараметрический сеттер должен принимать ScriptableObject в качестве первого параметра.

msg.setter1.parms = \
    Ожидается, что сеттер с одним параметром для {0}.

msg.setter2.expected = \
    Ожидалось, что статический или делегированный сеттер {0} будет принимать два параметра.

msg.setter.parms = \
    Ожидается, что сеттер будет принимать один или два параметра.

msg.setter.bad.type = \
    Неподдерживаемый тип параметра "{0}" в сеттере "{1}".

msg.add.sealed = \
    Невозможно добавить свойство к запечатанному объекту: {0}.

msg.remove.sealed = \
    Невозможно удалить свойство из запечатанного объекта: {0}.

msg.modify.sealed = \
    Невозможно изменить свойство запечатанного объекта: {0}.

msg.modify.readonly = \
    Невозможно изменить свойство readonly: {0}.

msg.both.data.and.accessor.desc = \
    Не может быть одновременно дескриптором данных и дескриптором доступа.

msg.change.configurable.false.to.true = \
    Невозможно изменить настраиваемый атрибут "{0}" с false на true.

msg.change.enumerable.with.configurable.false = \
    Невозможно изменить перечислимый атрибут "{0}", так как configurable равно false.

msg.change.writable.false.to.true.with.configurable.false = \
    Невозможно изменить записываемый атрибут "{0}" с false на true, потому что configurable - false.

msg.change.value.with.writable.false = \
    Невозможно изменить значение атрибута "{0}", потому что writeable - false.

msg.change.getter.with.configurable.false = \
    Невозможно изменить атрибут get для "{0}", потому что configurable - false.

msg.change.setter.with.configurable.false = \
    Невозможно изменить атрибут set атрибута "{0}", потому что configurable - false.

msg.change.property.data.to.accessor.with.configurable.false = \
    Невозможно изменить "{0}" со свойства data на свойство accessor, потому что configurable равно false.

msg.change.property.accessor.to.data.with.configurable.false = \
    Невозможно изменить "{0}" из свойства accessor в свойство data, потому что configurable равно false.

msg.not.extensible = \
    Невозможно добавить свойства к этому объекту, потому что extensible равно false.

msg.delete.property.with.configurable.false = \
    Невозможно удалить свойство "{0}", потому что configurable равно false.

# TokenStream

msg.missing.exponent = \
    Отсутствует экспонента.

msg.caught.nfe = \
    ошибка формата числа.

msg.unterminated.string.lit = \
    незавершенный строковый литерал.

msg.unterminated.comment = \
    нетерминированный комментарий.

msg.unterminated.re.lit = \
    не завершенный литерал регулярного выражения.

msg.invalid.re.flag = \
    недопустимый флаг ''{0}'' после регулярного выражения.

msg.no.re.input.for = \
    нет ввода для {0}.

msg.illegal.character = \
    недопустимый символ: {0}.

msg.invalid.escape = \
    недопустимая управляющая последовательность Unicode.

msg.bad.namespace = \
    недействительный оператор пространства имен по умолчанию. \
    Синтаксис следующий: "пространство имен xml по умолчанию = EXPRESSION;".

# TokensStream warnings
msg.bad.octal.literal = \
    недопустимая восьмеричная литеральная цифра {0}; интерпретируется как десятичная цифра.

msg.reserved.keyword = \
    недопустимое использование будущего зарезервированного ключевого слова {0}; интерпретация его как обычного идентификатора.

# LiveConnect errors
msg.java.internal.field.type = \
    Внутренняя ошибка: преобразование типа {0} для присвоения {1} на {2} не удалось.

msg.java.conversion.implicit_method = \
    Невозможно найти метод конвертера "{0}" на классе {1}.

msg.java.method.assign = \
    Java-метод "{0}" не может быть присвоен.

msg.java.internal.private = \
    Внутренняя ошибка: попытка доступа к закрытому/защищенному полю "{0}".

msg.java.no_such_method = \
    Невозможно найти метод {0}.

msg.script.is.not.constructor = \
    Объекты сценария не являются конструкторами.

msg.nonjava.method = \
    Java-метод "{0}" был вызван с {1} в качестве значения "this", которое не может быть преобразовано в Java-тип {2}.

msg.java.member.not.found = \
    Java-класс "{0}" не имеет публичного поля экземпляра или метода с именем "{1}".

msg.java.array.index.out.of.bounds = \
    Индекс массива {0} выходит за границы [0..{1}].

msg.java.array.member.not.found = \
    Массивы Java не имеют открытых полей экземпляров или методов с именем "{0}".

msg.pkg.int = \
    Имена пакетов Java не могут быть числами.

msg.access.prohibited = \
    Доступ к классу Java "{0}" запрещен.

# ImporterTopLevel

msg.ambig.import = \
    Неоднозначный импорт: "{0}" и "{1}".

msg.not.pkg = \
    Функция importPackage должна вызываться с пакетом; вместо этого был "{0}".

msg.not.class = \
    Функция importClass должна быть вызвана с классом; вместо нее было "{0}".

msg.not.class.not.pkg = \
    "{0}" не является ни классом, ни пакетом.

msg.prop.defined = \
    Невозможно импортировать "{0}", поскольку свойство с таким именем уже определено.

#JavaAdapter
msg.adapter.zero.args = \
    JavaAdapter требует по крайней мере один аргумент.

msg.not.java.class.arg = \
    Аргумент {0} не является классом Java {1}.

#JavaAdapter
msg.only.one.super = \
    Только один класс может быть расширен JavaAdapter. Имеются {0} и {1}.


# Arrays

msg.arraylength.bad = \
    Неправильная длина массива.

msg.arraylength.too.big = \
    Длина массива {0} превышает поддерживаемый предел емкости.

msg.empty.array.reduce = \
    Уменьшение пустого массива без начального значения.

# URI

msg.bad.uri = \
    Неправильно сформированная последовательность URI.

# Number

msg.bad.precision = \
    Точность {0} вне диапазона.

# NativeGenerator

msg.send.newborn = \
    Попытка отправить значение новорожденному генератору.

msg.already.exec.gen = \
    Уже выполняющийся генератор.

msg.StopIteration.invalid = \
    StopIteration не может быть изменен на произвольный объект.

msg.generator.executing = \
    Генератор все еще выполняется после предыдущего вызова.

# Interpreter

msg.yield.closing = \
    Выход из закрывающегося генератора.

msg.called.null.or.undefined = \
    Метод {0}.prototype.{1} вызван на null или undefined.

msg.first.arg.not.regexp = \
    Первый аргумент метода {0}.prototype.{1} не должен быть регулярным выражением.

msg.arrowfunction.generator = \
    Стрелочная функция не может стать генератором.

# Arguments

msg.arguments.not.access.strict = \
    Невозможно получить доступ к свойству "{0}" объекта arguments в строгом режиме.

msg.object.cyclic.prototype = \
    Циклическое значение прототипа "{0}" недопустимо.

# Symbol support
msg.object.not.symbolscriptable = \
    Объект {0} не поддерживает ключи Symbol.

msg.no.assign.symbol.strict = \
    Объектам Symbol не могут быть присвоены свойства в строгом режиме.

msg.not.a.string = \
    Объект не является строкой.

msg.not.a.number = \
    Объект не является числом.

msg.cant.convert.to.number = \
    Невозможно преобразовать {0} в число.

msg.no.symbol.new = \
    Объекты-символы не могут быть созданы с помощью ''new''.

msg.compare.symbol = \
    Объекты-символы нельзя сравнивать.

msg.no.new = \
    Объекты {0} не могут быть построены с помощью ''new''.

msg.map.function.not = \
    Функция Map на самом деле не является функцией.

msg.constructor.no.function = \
    Конструктор для {0} не может быть вызван как функция.

msg.this.not.instance = \
    ''this'' не является экземпляром класса.

# Promises

msg.function.expected = \
    Ожидание, что первый аргумент будет функцией.

msg.constructor.expected = \
    Ожидание, что первый аргумент будет конструктором.

msg.promise.self.resolution = \
    Обещание саморазрешается.

msg.promise.capability.state = \
    Неверное состояние возможности обещания.

msg.promise.all.toobig = \
    Слишком много входов в Promise.all.