#
# Default JavaScript messages file.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This is replaced during jar assembly from property string
# and should not be translated
implementation.version = @IMPLEMENTATION.VERSION@

#
# To add JavaScript error messages for a particular locale, create a
# new Messages_[locale].properties file, where [locale] is the Java
# string abbreviation for that locale.  For example, JavaScript
# messages for the Polish locale should be located in
# Messages_pl.properties, and messages for the Italian Swiss locale
# should be located in Messages_it_CH.properties.  Message properties
# files should be accessible through the classpath under
# org.mozilla.javascript.resources
#
# See:
# java.util.ResourceBundle
# java.text.MessageFormat
#

# SomeJavaClassWhereUsed

params.omit.non.js.object.warning = true

msg.non.js.object.warning = \
    Context.javaToJS() の変換が見つかりませんでした: Rhino 実行時に "{1}" クラスのオブジェクト "{0}" が検出されましたが, String, Number, Boolean, または Scriptable のインスタンスが予期されていました. Context.javaToJS() 呼び出しが欠落していないかコードを確認してください.

# Codegen

msg.dup.parms = \
    パラメータ名「{0}」が重複しています.

msg.too.big.jump = \
    プログラムが複雑すぎます: ジャンプ・オフセットが大きすぎます.

msg.too.big.index = \
    プログラムが複雑すぎます: 内部インデックスが 64K の制限を超えています.

msg.while.compiling.fn = \
    関数 "{0}" のコンパイル中にコード生成エラーが発生しました {1}.

msg.while.compiling.script = \
    スクリプトのコンパイル中にコード生成エラーが発生しました {0}.

# Context

msg.ctor.not.found = \
    "{0}" のコンストラクタが見つかりませんでした.

msg.not.ctor = \
    "{0}" はコンストラクタではありません.

# FunctionObject

msg.varargs.ctor = \
    メソッドまたはコンストラクタ "{0}" は, 次のシグネチャを持つ static である必要があります. \
    "(Context cx, Object[] args, Function ctorObj, boolean inNewExpr)" というシグネチャを持つ静的メソッドでなければなりません. \
    を使用して, 変数引数コンストラクタを定義する.

msg.varargs.fun = \
    メソッド "{0}" は静的で, シグネチャは次のとおりです. \
    "(Context cx, Scriptable thisObj, Object[] args, Function funObj)" というシグネチャを持つ静的メソッドでなければならない. \
    を使用して, 変数引数関数を定義する.

msg.incompat.call = \
    メソッド「{0}」が互換性のないオブジェクトで呼び出されました.

msg.incompat.call.details = \
    メソッド「{0}」は互換性のないオブジェクトで呼び出されました ({1} は {2} のインスタンスではありません).

msg.bad.parms = \
    メソッド「{1}」でサポートされていないパラメータ型「{0}」があります.

msg.bad.method.return = \
    メソッド「{1}」でサポートされていない戻り値の型「{0}」があります.

msg.bad.ctor.return = \
    型 "{0}" のオブジェクトの構築はサポートされていません.

msg.no.overload = \
    メソッド "{0}" がクラス "{1}" に複数回出現しています.

msg.method.not.found = \
    メソッド "{0}" が "{1}" に見当たりません.

msg.method.missing.parameter = \
    {0}: 少なくとも {1} の引数が必要ですが, 渡されたのは {2} だけです.

# IRFactory

msg.bad.for.in.lhs = \
    for...in ループの左辺が無効です.

msg.mult.index = \
    for...in ループで許可される変数は 1 つだけです.

msg.bad.for.in.destruct = \
    for...in ループの左辺は, 長さ 2 の配列で, キーと値のペアを受け入れる必要があります. \
    キーと値のペアを受け入れるために, 長さ 2 の配列でなければなりません.

msg.bad.computed.property.in.destruct = \
    分割代入で計算されたプロパティはサポートされていません.

msg.cant.convert = \
    タイプ "{0}" に変換することはできません.

msg.bad.assign.left = \
    左辺の代入が無効です.

msg.bad.decr = \
    デクリメントオペランドが無効です.

msg.bad.incr = \
    インクリメント・オペランドが無効です.

msg.bad.yield = \
    yield は関数でなければなりません.

msg.yield.parenthesized = \
    yield 式は括弧でくくらなければなりません.

msg.nullish.bad.token = \
    構文エラー: 予期しないトークンです.

# NativeGlobal

msg.cant.call.indirect = \
    関数 "{0}" は直接呼び出す必要があり, 他の名前の関数を経由してはいけません. \
    を直接呼び出す必要があります.

msg.eval.nonstring = \
    プリミティブな文字列以外の値で eval() を呼び出すと, 単にその値が返されます. \
    単にその値を返します. これはあなたの意図するところでしょうか？

msg.eval.nonstring.strict = \
    プリミティブな文字列以外の値で eval() を呼び出すことは, ストリクトモードではできません. \
    はストリクトモードでは使用できません.

msg.bad.destruct.op = \
    無効な脱構造化代入演算子です.

# NativeCall

msg.only.from.new = \
    "コンストラクタ {0}" は "new" 式からしか呼び出すことができません.

msg.deprec.ctor = \
    "{0}" コンストラクタは非推奨です.

# NativeFunction

msg.no.function.ref.found = \
    関数参照 {0} をデコンパイルするソースが見つかりませんでした.

msg.arg.isnt.array = \
    Function.prototype.apply の第2引数は配列でなければなりません.

# NativeGlobal

msg.bad.esc.mask = \
    無効な文字列エスケープマスクです (HTEscape.c を参照).

# NativeJavaClass

msg.cant.instantiate = \
    {0} をインスタンス化するエラー: クラス {1} はインターフェースか抽象です.

msg.bad.ctor.sig = \
    間違ったシグネチャを持つコンストラクタが見つかりました. \
    {0} が {1} をシグネチャ {2} で呼び出しています.

msg.not.java.obj = \
    getClass() への引数は Java オブジェクトであることが期待されます.

msg.no.java.ctor = \
    引数 "{1}" を持つ "{0}" の Java コンストラクタが見つかりませんでした.

# NativeJavaMethod

msg.method.ambiguous = \
    Java メソッド {0}.{1} の選択は, JavaScript の引数タイプ ({2}) に一致する曖昧である. \
    候補のメソッドは {3}.

msg.constructor.ambiguous = \
    JavaScript の引数タイプ ({1}) に一致する Java のコンストラクタ {0} の選択は曖昧です. \
    候補のコンストラクタは次のとおりです {2}.

# NativeJavaObject

msg.conversion.not.allowed = \
    {0} を {1} に変換することはできません.

msg.no.empty.interface.conversion = \
    関数をメソッドなしのインターフェイス {0} に変換できません.

msg.no.function.interface.conversion = \
    関数は, 異なる名前のメソッドを含むので, インターフェイス {0} に変換できません. \
    関数をインターフェースに変換できません.

msg.undefined.function.interface = \
    プロパティ「{0}」がインターフェース・アダプタで定義されていません.

msg.not.function.interface = \
    プロパティ「{0}」は, インターフェイスアダプタの関数ではありません.

# NativeJavaPackage

msg.not.classloader = \
    "Packages" のコンストラクタは java.lang.Classloader 型の引数を想定しています.

# NativeRegExp

msg.bad.quant = \
    無効な量記号 {0} です.

msg.overlarge.backref = \
    後方参照が大きすぎます {0}.

msg.overlarge.min = \
    最小値が大きすぎます {0}.

msg.overlarge.max = \
    最大値が大きすぎます {0}.

msg.zero.quant = \
    ゼロ量体 {0} です.

msg.max.lt.min = \
    最大値 {0} が最小値より小さい

msg.unterm.quant = \
    終端未定義量詞 {0}.

msg.unterm.paren = \
    終端しない親項目 {0}.

msg.unterm.class = \
    終了していない文字クラス {0}.

msg.bad.range = \
    文字クラスが無効な範囲です

msg.trail.backslash = \
    正規表現の末尾に ''\\'' がある.

msg.re.unmatched.right.paren = \
    正規表現に '')'' が含まれます.

msg.no.regexp = \
    正規表現が使用できません.

msg.bad.backref = \
    後方参照が捕捉する括弧の数を超えています.

msg.bad.regexp.compile = \
    への最初の引数が RegExp オブジェクトの場合, 引数は 1 つだけ指定できます. \
    RegExp.prototype.compile の最初の引数が RegExp オブジェクトである場合, 引数は 1 つだけ指定できます.

msg.arg.not.object = \
    object 型の引数を期待しましたが, 代わりに {0} 型がありました.

msg.str.match.all.no.global.flag = \
    String.prototype.matchAll が非グローバルな RegExp 引数で呼び出されました.

# NativeDate

msg.invalid.date = \
    日付は無効である.

msg.toisostring.must.return.primitive = \
    toISOString はプリミティブ値を返さなければなりませんが, 代わりに "{0}" を返しました.

msg.invalid.toprimitive.hint = \
    [Symbol.toPrimitive]: "string", "number", または "default" が必要ですが, "{0}" が渡されました.

# NativeJSON

msg.json.cant.serialize = \
    {0} をシリアライズする方法がわかりません.

# Parser

msg.got.syntax.errors = \
    コンパイルは {0} 構文エラーを生成しました.

msg.var.redecl = \
    TypeError: 変数の再宣言 ("var {0}" が存在する).

msg.const.redecl = \
    TypeError: 変数の再宣言 ("const {0}" が存在する).

msg.let.redecl = \
    TypeError: 変数の再宣言("let {0}" が存在する)

msg.parm.redecl = \
    TypeError: フォーマルパラメーター {0} の再宣言.

msg.fn.redecl = \
    TypeError: 関数 {0} の再宣言.

msg.let.decl.not.in.block = \
    SyntaxError: let 宣言がブロック内に直接存在しない.

msg.bad.object.init = \
    SyntaxError: 無効なオブジェクト・イニシャライザー.

# NodeTransformer

msg.dup.label = \
    ラベルが重複しています.

msg.undef.label = \
    未定義のラベル.

msg.bad.break = \
    ラベルのない break は, ループまたはスイッチの内部になければなりません.

msg.continue.outside = \
    continue はループの中になければなりません.

msg.continue.nonloop = \
    continue は反復文のラベルのみ使用可能です.

msg.bad.throw.eol = \
    throw キーワードと throw 式の間に行末を入れることはできません. \
    式との間に改行があってはいけません.

msg.no.paren.parms = \
    関数パラメータの前に "(" がない

msg.no.parm = \
    形式パラメータの欠落

msg.no.paren.after.parms = \
    形式パラメータの後に ")" がない

msg.parm.after.rest = \
    rest 引数の後にパラメータがあります.

msg.no.brace.body = \
    関数本体の前に "{" がない

msg.no.brace.after.body = \
    関数本体の後ろに "}" がない

msg.no.paren.cond = \
    条件の前に "(" がない

msg.no.paren.after.cond = \
    条件の後に ")" がない.

msg.no.semi.stmt = \
    文の前に「;」がない

msg.missing.semi = \
    ステートメントの後に「;」がない

msg.no.name.after.dot = \
    "." 演算子の後に名前がありません.

msg.no.name.after.coloncolon = \
    "::" 演算子の後に名前がありません.

msg.no.name.after.dotdot = \
    ".." 演算子の後にある名前が欠落しています.

msg.no.name.after.xmlAttr = \
    XML 属性 ".@" の後に名前がありません.

msg.no.bracket.index = \
    インデックス式で "]" が欠落しています.

msg.no.paren.switch = \
    switch 式の前に "(" を欠落.

msg.no.paren.after.switch = \
    switch 式の後に ")" がありません.

msg.no.brace.switch = \
    switch 本体の前に "{" がありません.

msg.bad.switch = \
    switch 文が無効です.

msg.no.colon.case = \
    case 式の後に ":" がありません.

msg.double.switch.default = \
    switch 文のデフォルトラベルは 1 つだけです.

msg.no.while.do = \
    do...while ループ本体の後に while がありません.

msg.no.paren.for = \
    for の後に "(" がありません.

msg.no.semi.for = \
    for ループのイニシャライザの後に ";" がありません.

msg.no.semi.for.cond = \
    for-loop の条件の後に ";" がありません.

msg.in.after.for.name = \
    for の後に "in" を欠落.

msg.no.paren.for.ctrl = \
    for ループ制御の後に ")" がない.

msg.no.paren.with = \
    with ステートメントオブジェクトの前に "(" がない.

msg.no.paren.after.with = \
    with ステートメントオブジェクトの後に ")" がない.

msg.no.with.strict = \
    with ステートメントはストリクトモードでは許可されません.

msg.no.paren.after.let = \
    let の後に "(" がありません.

msg.no.paren.let = \
    変数リストの後に ")" がありません.

msg.no.curly.let = \
    let 文の後に "}" がない.

msg.bad.return = \
    無効な return

msg.no.brace.block = \
    複合文の "}" 欠落.

msg.bad.label = \
    無効なラベル

msg.bad.var = \
    変数名の欠落

msg.bad.var.init = \
    変数の初期化が無効

msg.no.colon.cond = \
    条件式に ":" がない

msg.no.paren.arg = \
    引数リストの後に ")" がない

msg.no.bracket.arg = \
    要素リストの後に "]" がありません.

msg.bad.prop = \
    プロパティ ID が無効.

msg.no.colon.prop = \
    プロパティ ID の後に ":" がありません.

msg.no.brace.prop = \
    プロパティ・リストの後に "}" がありません.

msg.no.paren = \
    親文字に ")" がありません.

msg.reserved.id = \
    識別子は予約語: {0} です.

msg.super.shorthand.function = \
    super は簡略化された関数内で使用する必要があります.

msg.optional.super = \
    super はオプショナルチェーン式では使用できません.

msg.super.delete = \
    super プロパティを削除することはできません.

msg.no.paren.catch = \
    キャッチ・ブロック条件の前に "(" がありません.

msg.bad.catchcond = \
    キャッチブロックの条件が無効です.

msg.catch.unreachable = \
    修飾されていない catch に続く catch 句は到達不可能です.

msg.no.brace.try = \
    try ブロックの前に "{" がありません.

msg.no.brace.catchblock = \
    catch ブロック本体の前に "{" がない.

msg.try.no.catchfinally = \
    try に ''catch'' や ''finally'' がない.

msg.no.return.value = \
    関数 {0} が常に値を返すとは限らない.

msg.anon.no.return.value = \
    無名関数が常に値を返すとは限らない.

msg.return.inconsistent = \
    return ステートメントが以前の使用法と矛盾している.

msg.generator.returns = \
    TypeError: ジェネレーター関数 {0} は値を返す.

msg.anon.generator.returns = \
    TypeError: 無名ジェネレーター関数は値を返す.

msg.syntax.invalid.assignment.lhs = \
    構文エラー: 左辺値が無効です.

msg.syntax = \
    構文エラー.

msg.unexpected.eof = \
    予期しないファイルの終了.

msg.XML.bad.form = \
    不正な XML 構文が形成されました.

msg.XML.not.available = \
    XMLランタイムは使用できません.

msg.too.deep.parser.recursion = \
    パース中に深すぎる再帰が発生しました.

msg.too.many.constructor.args = \
    コンストラクタの引数が多すぎます.

msg.too.many.function.args = \
    関数引数が多すぎます.

msg.no.side.effects = \
    コードに副作用がありません.

msg.extra.trailing.semi = \
    末尾のセミコロンが余分です.

msg.extra.trailing.comma = \
    ECMA-262 のオブジェクト・イニシャライザでは, 末尾のカンマは合法ではありません.

msg.trailing.array.comma = \
    配列リテラルでの末尾カンマは, クロスブラウザで動作が異なります.

msg.equal.as.assign = \
    等値性判定 (==) が代入 (=) と誤入力されましたか？

msg.var.hides.arg = \
    変数 {0} が引数を隠しています.

msg.destruct.assign.no.init = \
    デストラクチャリング宣言に "=" がない.

msg.default.args = \
    デフォルト値はバージョン >= 200 でのみサポートされます.

msg.destruct.default.vals = \
    デストラクチャリング宣言のデフォルト値はサポートされていません.

msg.no.old.octal.strict = \
    ストリクトモードで古い 8 進数の使用が禁止されています.

msg.no.old.octal.bigint = \
    BigInt で古い 8 進数は禁止されています.

msg.dup.obj.lit.prop.strict = \
    プロパティ "{0}" は, このオブジェクト・リテラルで既に定義されています.

msg.dup.param.strict = \
    パラメータ "{0}" はこの関数で既に宣言されています.

msg.bad.id.strict = \
    "{0}" は, ストリクトモードでのこの用途では有効な識別子ではありません.

msg.no.unary.expr.on.left.exp = \
    "{0}" は "**" の左辺で許可されていません.

# ScriptRuntime

# is there a better message for this?
# it's currently only used as a poison pill for caller, caller and arguments properties
msg.op.not.allowed = \
    この操作は許可されていません.

msg.no.properties = \
    {0} はプロパティを持ちません.

msg.invalid.iterator = \
    無効なイテレータ値です.

msg.iterator.primitive = \
    __iterator__ はプリミティブ値を返しました.

msg.not.iterable = \
    {0} はイテレート可能ではありません.

msg.invalid.for.each = \
    無効な for...each ループです.

msg.assn.create.strict = \
    宣言されていない変数 {0} への代入です.

msg.ref.undefined.prop = \
    未定義のプロパティ {0} への参照.

msg.prop.not.found = \
    プロパティ {0} が見つかりませんでした.

msg.set.prop.no.setter = \
    ゲッターだけを持つプロパティ ''{0}'' を値 ''{1}'' に設定できない.

msg.invalid.type = \
    タイプ {0} の無効な JavaScript 値です.

msg.primitive.expected = \
    プリミティブ型が期待されます (代わりに {0} がありました).

msg.namespace.expected = \
    名前空間オブジェクトが :: の左側にあると予想されます (代わりに {0} が見つかりました).

msg.null.to.object = \
    null をオブジェクトに変換できません.

msg.undef.to.object = \
    未定義をオブジェクトに変換できません.

msg.cant.convert.to.bigint = \
    {0} を BigInt に変換できません.

msg.cant.convert.to.bigint.isnt.integer = \
    {0} は整数ではないので BigInt に変換できません.

msg.bigint.bad.form = \
    BigInt 構文が不正に形成されています.

msg.cyclic.value = \
    {0} のサイクリック値は使用できません.

msg.is.not.defined = \
    {0} は定義されていません.

msg.undef.prop.read = \
    {0} からプロパティ "{1}" を読み込めません.

msg.undef.prop.write = \
    {0} のプロパティ "{1}" を "{2}" に設定できない.

msg.undef.prop.delete = \
    {0} のプロパティ "{1}" を削除できません.

msg.undef.method.call = \
    {0} のメソッド "{1}" を呼び出すことができません.

msg.undef.with = \
    {0} に "with" を適用することはできません.

msg.isnt.function = \
    {0} は関数ではなく, {1} です.

msg.isnt.function.in = \
    オブジェクト {1} のプロパティ {0} を呼び出すことはできません. それは関数ではなく, "{2}" です.

msg.function.not.found = \
    関数 {0} を見つけることができません.

msg.function.not.found.in = \
    オブジェクト {1} で関数 {0} が見つかりません.

msg.isnt.xml.object = \
    {0} は xml オブジェクトではありません.

msg.no.ref.to.get = \
    {0} は参照値読み込みの参照ではありません.

msg.no.ref.to.set = \
    {0} は {1} に参照値を設定するための参照ではありません.

msg.no.ref.from.function = \
    関数 {0} は, 代入の左辺として使用することはできません. \
    の左辺として, あるいは ++ や -- 演算子のオペランドとして使用することはできません.

msg.bad.default.value = \
    オブジェクトの getDefaultValue() メソッドはオブジェクトを返しました.

msg.instanceof.not.object = \
    オブジェクトでないものに ''instanceof'' は使えません.

msg.instanceof.bad.prototype = \
    {0} の ''prototype'' プロパティはオブジェクトではありません.

msg.in.not.object = \
    オブジェクトでないものに ''in'' は使えません.

msg.bad.radix = \
    不正な基数 {0} です.

msg.division.zero = \
    ゼロによる除算です.

msg.bigint.negative.exponent = \
    BigInt が負の指数です.

msg.bigint.out.of.range.arithmetic = \
    BigInt が大きすぎます.

msg.cant.convert.to.primitive = \
    オブジェクトをプリミティブ値に変換できません.

# ScriptableObject

msg.default.value = \
    オブジェクトのデフォルト値が見つかりません.

msg.zero.arg.ctor = \
    0 パラメータのコンストラクタを持たないクラス "{0}" をロードできません.

duplicate.defineClass.name = \
    メソッド "{0}" が無効です: 名前 "{1}" は既に使用されています.

msg.ctor.multiple.parms = \
    1 つ以上のコンストラクタに複数のパラメータがあるため, コンストラクタまたはクラス {0} を定義できません. \
    コンストラクタに複数のパラメータがあるため, コンストラクタまたはクラス {0} を定義できません.

msg.extend.scriptable = \
    プロパティ {1} を定義するには, {0} は ScriptableObject を拡張する必要があります.

msg.bad.getter.parms = \
    プロパティを定義するには, ゲッター {0} のパラメータが 0 である必要があります. \
    または 1 つの ScriptableObject パラメータでなければなりません.

msg.obj.getter.parms = \
    静的または委譲されたゲッター {0} が ScriptableObject パラメータを取ることが期待されます.

msg.getter.static = \
    ゲッターとセッターは両方とも静的であるか, またはどちらも静的である必要があります.

msg.setter.return = \
    セッターは void リターン・タイプでなければなりません {0}.

msg.setter2.parms = \
    2 パラメーターのセッターは, その最初のパラメーターとして ScriptableObject を取る必要があります.

msg.setter1.parms = \
    {0} のシングル パラメータ セッターを想定しています.

msg.setter2.expected = \
    静的または委譲されたセッター {0} が 2 つのパラメーターを取ると予想されます.

msg.setter.parms = \
    セッターに 1 つまたは 2 つのパラメータがあると予想されます.

msg.setter.bad.type = \
    セッター「{1}」でサポートされていないパラメータ型「{0}」があります.

msg.add.sealed = \
    シールされたオブジェクトにプロパティを追加できません {0}.

msg.remove.sealed = \
    シールされたオブジェクトからプロパティを削除できません {0}.

msg.modify.sealed = \
    シールされたオブジェクトのプロパティを変更できない {0}.

msg.modify.readonly = \
    読み取り専用の属性を変更できない: {0}.

msg.both.data.and.accessor.desc = \
    データ記述子とアクセッサ記述子の両方は使用できない.

msg.change.configurable.false.to.true = \
    {0} の configurable 属性を false から true に変更することはできない.

msg.change.enumerable.with.configurable.false = \
    configurable が false のため, "{0}" の enumerable 属性を変更することはできません.

msg.change.writable.false.to.true.with.configurable.false = \
    configurable が false のため, "{0}" の writable 属性を false から true に変更することができません.

msg.change.value.with.writable.false = \
    writeable が false のため, "{0}" 属性の値を変更できません.

msg.change.getter.with.configurable.false = \
    configurable が false のため, get 属性を変更することができません.

msg.change.setter.with.configurable.false = \
    configurable が false のため, "{0}" の set 属性は変更できません.

msg.change.property.data.to.accessor.with.configurable.false = \
    configurable が false なので, "{0}" をデータプロパティからアクセッサプロパティに変更できません.

msg.change.property.accessor.to.data.with.configurable.false = \
    configurable が false なので, 「{0}」をアクセッサープロパティからデータプロパティに変更できません.

msg.not.extensible = \
    extensible が false のため, このオブジェクトにプロパティを追加できません.

msg.delete.property.with.configurable.false = \
    configurable が false のため, "{0}" プロパティを削除できません.

# TokenStream

msg.missing.exponent = \
    指数がありません.

msg.caught.nfe = \
    数値フォーマット・エラー.

msg.unterminated.string.lit = \
    文字列リテラルの終端がありません.

msg.unterminated.comment = \
    終端されていないコメント.

msg.unterminated.re.lit = \
    終端されていない正規表現リテラル.

msg.invalid.re.flag = \
    正規表現の後に無効なフラグ ''{0}'' があります.

msg.no.re.input.for = \
    {0} の入力がありません.

msg.illegal.character = \
    不正な文字: {0}.

msg.invalid.escape = \
    無効な Unicode エスケープ・シーケンス.

msg.bad.namespace = \
    有効なデフォルト名前空間文ではありません. \
    構文は次のとおりです. "default xml namespace = EXPRESSION;" です.

# TokensStream warnings
msg.bad.octal.literal = \
    不正な 8 進数リテラル数字 {0}; 10 進数として解釈されます.

msg.reserved.keyword = \
    未来予約キーワード {0} を通常の識別子として解釈しています.

# LiveConnect errors
msg.java.internal.field.type = \
    内部エラー: {2} で {1} に代入するための {0} の型変換に失敗しました.

msg.java.conversion.implicit_method = \
    クラス {1} でコンバータ・メソッド "{0}" を見つけられません.

msg.java.method.assign = \
    Java メソッド "{0}" に代入することはできません.

msg.java.internal.private = \
    内部エラー: private/protected フィールド "{0}" にアクセスしようとしました.

msg.java.no_such_method = \
    メソッド {0} を見つけることができません.

msg.script.is.not.constructor = \
    スクリプト・オブジェクトはコンストラクタではありません.

msg.nonjava.method = \
    Java メソッド「{0}」は, Java タイプ {2} に変換できない「this」値として {1} で呼び出されました.

msg.java.member.not.found = \
    Java クラス "{0}" には "{1}" という名前のパブリックインスタンスフィールドまたはメソッドがありません.

msg.java.array.index.out.of.bounds = \
    配列のインデックス {0} は, 境界外 [0..{1}] です.

msg.java.array.member.not.found = \
    Java の配列には "{0}" という名前のパブリック・インスタンス・フィールドまたはメソッドがありません.

msg.pkg.int = \
    Java パッケージ名は数字であってはいけません.

msg.access.prohibited = \
    Java クラス "{0}" へのアクセスは禁止されています.

# ImporterTopLevel

msg.ambig.import = \
    曖昧なインポート: "{0}" と "{1}".

msg.not.pkg = \
    関数 importPackage はパッケージと一緒に呼び出す必要があります; 代わりに "{0}" を持っていました.

msg.not.class = \
    関数 importClass はクラスで呼び出されなければなりませんが, 代わりに "{0}" を持っていました.

msg.not.class.not.pkg = \
    "{0}" はクラスでもパッケージでもありません.

msg.prop.defined = \
    "{0}" は, その名前のプロパティがすでに定義されているため, インポートできません.

#JavaAdapter
msg.adapter.zero.args = \
    JavaAdapter は, 少なくとも 1 つの引数を必要とします.

msg.not.java.class.arg = \
    引数 {0} は, Java クラス {1} ではありません.

#JavaAdapter
msg.only.one.super = \
    1 つの JavaAdapter で拡張できるクラスは 1 つだけです. {0} と {1} がありました.


# Arrays

msg.arraylength.bad = \
    不適切な配列長です.

msg.arraylength.too.big = \
    配列の長さ {0} がサポートされている容量の制限を超えています.

msg.empty.array.reduce = \
    初期値なしの空の配列の削減.

# URI

msg.bad.uri = \
    URI シーケンスが不正です.

# Number

msg.bad.precision = \
    精度 {0} が範囲外です.

# NativeGenerator

msg.send.newborn = \
    新生ジェネレータに値を送信しようとしています.

msg.already.exec.gen = \
    既に実行中のジェネレータです.

msg.StopIteration.invalid = \
    StopIteration は, 任意のオブジェクトに変更できません.

msg.generator.executing = \
    ジェネレータが以前の呼び出しからまだ実行されています.

# Interpreter

msg.yield.closing = \
    ジェネレータの終了から降伏します.

msg.called.null.or.undefined = \
    {0}.prototype.{1} メソッドが null または undefined で呼び出されました.

msg.first.arg.not.regexp = \
    {0}.prototype.{1} への最初の引数は, 正規表現であってはならない.

msg.arrowfunction.generator = \
    アロー関数はジェネレーターになることができません.

# Arguments

msg.arguments.not.access.strict = \
    ストリクトモードで引数オブジェクトの "{0}" プロパティにアクセスできない.

msg.object.cyclic.prototype = \
    循環プロトタイプ "{0}" 値は許可されません.

msg.default.args.use.strict = \
    関数にデフォルト引数を含ませて "use strict" を使用することはできません.

# Symbol support

msg.object.not.symbolscriptable = \
    オブジェクト {0} は Symbol キーをサポートしていません.

msg.no.assign.symbol.strict = \
    Symbol オブジェクトは, ストリクトモードでプロパティを割り当てることができません.

msg.not.a.string = \
    オブジェクトは文字列ではありません.

msg.not.a.number = \
    オブジェクトは数値ではありません.

msg.cant.convert.to.number = \
    {0} を数値に変換することはできません.

msg.no.symbol.new = \
    シンボルオブジェクトは ''new'' を使って構築することはできません.

msg.compare.symbol = \
    シンボル・オブジェクトは比較できません.

msg.no.new = \
    {0} オブジェクトは ''new'' を使って構築できません.

msg.map.function.not = \
    Map 関数は実際には関数ではありません.

msg.constructor.no.function = \
    {0} のコンストラクタを関数として呼び出してはいけない.

msg.this.not.instance = \
    ''this'' はクラスのインスタンスではない.

# Promises

msg.function.expected = \
    最初の引数が関数であることを期待する.

msg.constructor.expected = \
    最初の引数がコンストラクタであることを期待している.

msg.promise.self.resolution = \
    プロミスは自己解決しています.

msg.promise.capability.state = \
    プロミス・ケイパビリティの状態が無効です.

msg.promise.all.toobig = \
    Promise.all への入力が多すぎます.

msg.promise.any.toobig = \
    Promise.any の入力が多すぎます.

msg.typed.array.ctor.incompatible = \
    %TypedArray%.prototype.{0} メソッドは互換性のないレシーバーで呼び出されました.

msg.typed.array.bad.offset = \
    オフセット {0} が範囲外です.

msg.typed.array.bad.length = \
    長さ {0} が範囲外です.

msg.typed.array.bad.offset.byte.size = \
    オフセット {0} はバイトサイズ {1} の倍数である必要があります.

msg.typed.array.bad.buffer.length.byte.size = \
    使用されたバッファーの長さ {0} はバイトサイズ {1} の倍数である必要があります.

msg.typed.array.bad.source.array = \
    ソース配列が長すぎます.

msg.typed.array.index.out.of.bounds = \
    インデックス {0} が範囲 [{1}..{2}] を超えています.

# Error

msg.iterable.expected = \
    最初の引数は Iterable である必要があります.

# ArrayBuffer

msg.species.invalid.ctor = \
    オブジェクトのコンストラクタにある [Symbol.species] プロパティはコンストラクタではありません.

msg.arraybuf.smaller.len = \
    少なくとも {0} バイトの ArrayBuffer が必要ですが, 代わりに {1} バイトが取得されました.

msg.arraybuf.same = \
    異なる ArrayBuffer を使用してください.